{"remainingRequest":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js!/Users/caibr002/Desktop/staples_ds_1/documentation/components/Tooltip/tooltips.mdx","dependencies":[{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/components/Tooltip/tooltips.mdx","mtime":1563467409000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/components/Tooltip/tooltips.mdx"],"names":["React","mdx","Playground","Props","UncontrolledTooltip","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","width","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport { UncontrolledTooltip } from \"reactstrap\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"tooltips\"\n    }}>{`Tooltips`}</h1>\n    <p>{`Tooltips provide additional but non-essential information upon hover or focus. The information should be contextual and useful. Keep tooltips short.`}</p>\n    <h2 {...{\n      \"id\": \"tooltip-in-text\"\n    }}>{`Tooltip in Text`}</h2>\n    <Playground __position={0} __code={'<p>\\n  This tooltip displays to the{\\' \\'}\\n  <a href=\\\"#\\\" id=\\\"UncontrolledTooltipExample1\\\">\\n    top\\n  </a>\\n  .\\n</p>\\n<p>\\n  This tooltip displays to the{\\' \\'}\\n  <a href=\\\"#\\\" id=\\\"UncontrolledTooltipExample2\\\">\\n    right\\n  </a>\\n  .\\n</p>\\n<p>\\n  This tooltip displays to the{\\' \\'}\\n  <a href=\\\"#\\\" id=\\\"UncontrolledTooltipExample3\\\">\\n    bottom\\n  </a>\\n  .\\n</p>\\n<p>\\n  This tooltip displays to the{\\' \\'}\\n  <a href=\\\"#\\\" id=\\\"UncontrolledTooltipExample4\\\">\\n    left\\n  </a>\\n  .\\n</p>\\n\\n<UncontrolledTooltip placement=\\\"top\\\" target=\\\"UncontrolledTooltipExample1\\\">\\n  Tooltip on top\\n</UncontrolledTooltip>\\n<UncontrolledTooltip placement=\\\"right\\\" target=\\\"UncontrolledTooltipExample2\\\">\\n  Tooltip on right\\n</UncontrolledTooltip>\\n<UncontrolledTooltip placement=\\\"bottom\\\" target=\\\"UncontrolledTooltipExample3\\\">\\n  Tooltip on bottom\\n</UncontrolledTooltip>\\n<UncontrolledTooltip placement=\\\"left\\\" target=\\\"UncontrolledTooltipExample4\\\">\\n  Tooltip on left\\n</UncontrolledTooltip>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      UncontrolledTooltip\n    }} mdxType=\"Playground\">\n      <p>This tooltip displays to the <a href=\"#\" id=\"UncontrolledTooltipExample1\">top</a>.</p>\n      <p>This tooltip displays to the <a href=\"#\" id=\"UncontrolledTooltipExample2\">right</a>.</p>\n      <p>This tooltip displays to the <a href=\"#\" id=\"UncontrolledTooltipExample3\">bottom</a>.</p>\n      <p>This tooltip displays to the <a href=\"#\" id=\"UncontrolledTooltipExample4\">left</a>.</p>\n\n      <UncontrolledTooltip placement=\"top\" target=\"UncontrolledTooltipExample1\" mdxType=\"UncontrolledTooltip\">Tooltip on top</UncontrolledTooltip>\n      <UncontrolledTooltip placement=\"right\" target=\"UncontrolledTooltipExample2\" mdxType=\"UncontrolledTooltip\">Tooltip on right</UncontrolledTooltip>\n      <UncontrolledTooltip placement=\"bottom\" target=\"UncontrolledTooltipExample3\" mdxType=\"UncontrolledTooltip\">Tooltip on bottom</UncontrolledTooltip>\n      <UncontrolledTooltip placement=\"left\" target=\"UncontrolledTooltipExample4\" mdxType=\"UncontrolledTooltip\">Tooltip on left</UncontrolledTooltip>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<p>This tooltip displays to the <a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\">top</a>.</p>\n<p>This tooltip displays to the <a href=\"#\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Tooltip on right\">right</a>.</p>\n<p>This tooltip displays to the <a href=\"#\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Tooltip on bottom\">bottom</a>.</p>\n<p>This tooltip displays to the <a href=\"#\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Tooltip on left\">left</a>.</p>\n`}</code></pre>\n    <p>{`When triggered from hyperlinks that span multiple lines, tooltips will be centered. Use `}<inlineCode parentName=\"p\">{`white-space: nowrap;`}</inlineCode>{` on your `}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{` to avoid this behavior.`}</p>\n    <p><strong parentName=\"p\">{`Note: Tooltips with zero-length titles are never displayed.`}</strong></p>\n    <h2 {...{\n      \"id\": \"tooltip-in-button\"\n    }}>{`Tooltip in Button`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`<button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\">Tooltip on top</button>\n<button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Tooltip on right\">Tooltip on right</button>\n<button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Tooltip on bottom\">Tooltip on bottom</button>\n<button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Tooltip on left\">Tooltip on left</button>\n`}</code></pre>\n    <p>{`Specify `}<inlineCode parentName=\"p\">{`container: 'body'`}</inlineCode>{` to avoid rendering problems in more complex components (like our input groups, button groups, etc).`}</p>\n    <h2 {...{\n      \"id\": \"tooltip-on-disabled-elements\"\n    }}>{`Tooltip on Disabled Elements`}</h2>\n    <p>{`Elements with the `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` attribute aren’t interactive, meaning users cannot focus, hover or click them to trigger a tooltip (or popover). As a workaround, you’ll want to trigger the tooltip from a wrapper `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<span>`}</inlineCode>{`, ideally made keyboard-focusable using `}<inlineCode parentName=\"p\">{`tabindex=\"0\"`}</inlineCode>{`, and override the `}<inlineCode parentName=\"p\">{`pointer-events`}</inlineCode>{` on the disabled element.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Tooltips must be hidden before their corresponding elements have been removed from the DOM. Since tooltips are triggered by an element inside a shadow DOM, they can't be triggered on hidden elements.`}</p>\n    <h3 {...{\n      \"id\": \"markup\"\n    }}>{`Markup`}</h3>\n    <p>{`The required markup for a tooltip is only a data attribute and title on the HTML element you wish to have a tooltip. The generated markup of a tooltip is rather simple, though it does require a position (by default, set to top by the plugin).`}</p>\n    <h3 {...{\n      \"id\": \"animation\"\n    }}>{`Animation`}</h3>\n    <p>{`The animation effect of this component is dependent on the `}<inlineCode parentName=\"p\">{`prefers-reduced-motion`}</inlineCode>{` media query. One way to initialize all tooltips on a page would be to select them by their data-toggle attribute:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$(function () {\n    $('[data-toggle=\"tooltip\"]').tooltip()\n})\n`}</code></pre>\n    <p>{`The tooltip plugin generates content and markup on demand, and by default places tooltips after their trigger element.`}</p>\n    <h3 {...{\n      \"id\": \"trigger-via-javascript\"\n    }}>{`Trigger via JavaScript`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#example').tooltip(options)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"overflow-auto-and-scroll\"\n    }}>{`Overflow Auto and Scroll`}</h3>\n    <p>{`Tooltip position attempts to automatically change when a parent container has `}<inlineCode parentName=\"p\">{`overflow: auto`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`overflow: scroll`}</inlineCode>{` like our `}<inlineCode parentName=\"p\">{`.table-responsive`}</inlineCode>{` however, it still keeps the original position. As a workaround, set the boundary option to anything other than default value, 'scrollParent', such as 'window':`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\\`$('#example').tooltip({ boundary: 'window' })\\`\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"assistive-technology\"\n    }}>{`Assistive Technology`}</h2>\n    <p>{`You should only add tooltips to HTML elements that are traditionally keyboard-focusable and interactive (such as links or form controls). Although arbitrary HTML elements (such as `}<inlineCode parentName=\"p\">{`<span>`}</inlineCode>{`s) can be made focusable by adding the `}<inlineCode parentName=\"p\">{`tabindex=\"0\"`}</inlineCode>{` attribute, this will add potentially annoying and confusing tab stops on non-interactive elements for keyboard users. In addition, most assistive technologies currently do not announce the tooltip in this situation.`}</p>\n    <p>{`Additionally, do not rely solely on hover as the trigger for your tooltip, as this will make your tooltips impossible to trigger for keyboard users.`}</p>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <p>{`Options can be passed via data attributes or JavaScript. For data attributes, append the option name to `}<inlineCode parentName=\"p\">{`data-`}</inlineCode>{`, as in `}<inlineCode parentName=\"p\">{`data-animation=\"\"`}</inlineCode>{`.`}</p>\n    <p>{`Note that for security reasons the `}<inlineCode parentName=\"p\">{`sanitize`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`sanitizeFn`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`whiteList`}</inlineCode>{` options cannot be supplied using data attributes.`}</p>\n    <table class=\"table table-bordered table-striped\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th style={{\n            width: 100\n          }}>Name</th>\n\t\t\t<th style={{\n            width: 100\n          }}>Type</th>\n\t\t\t<th style={{\n            width: 100\n          }}>Default</th>\n\t\t\t<th>Description</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>animation</td>\n\t\t\t<td>boolean</td>\n\t\t\t<td>true</td>\n\t\t\t<td>Apply a CSS fade transition to the tooltip</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>container</td>\n\t\t\t<td>string / element / false</td>\n\t\t\t<td>false</td>\n\t\t\t<td>\n\t\t\t\t<p>\n\t\t\t\t\tAppends the tooltip to a specific element. Example:\n\t\t\t\t\t<code>container: 'body'</code>. This option is particularly useful\n\t\t\t\t\tin that it allows you to position the tooltip in the flow of\n\t\t\t\t\tthe document near the triggering element - which will prevent\n\t\t\t\t\tthe tooltip from floating away from the triggering element during\n\t\t\t\t\ta window resize.\n\t\t\t\t</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>delay</td>\n\t\t\t<td>number / object</td>\n\t\t\t<td>0</td>\n\t\t\t<td>\n\t\t\t\t<p>\n\t\t\t\t\tDelay showing and hiding the tooltip (ms) - does not apply\n\t\t\t\t\tto manual trigger type\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tIf a number is supplied, delay is applied to both hide/show\n\t\t\t\t</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>html</td>\n\t\t\t<td>boolean</td>\n\t\t\t<td>false</td>\n\t\t\t<td>\n\t\t\t\t<p>Allow HTML in the tooltip.</p>\n\t\t\t\t<p>\n\t\t\t\t\tIf true, HTML tags in the tooltip's <code>title</code> will\n\t\t\t\t\tbe rendered in the tooltip. If false, <code>innerText</code>{\" \"}\n\t\t\t\t\tproperty will be used to insert content into the DOM.\n\t\t\t\t</p>\n\t\t\t\t<p>Use text if you're worried about XSS attacks.</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>placement</td>\n\t\t\t<td>string / function</td>\n\t\t\t<td>'top'</td>\n\t\t\t<td>\n\t\t\t\t<p>\n\t\t\t\t\tHow to position the tooltip - auto | top | bottom | left |\n\t\t\t\t\tright. When <code>auto</code> is specified, it will\n\t\t\t\t\tdynamically reorient the tooltip.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tction is used to determine the placement, it is called with\n\t\t\t\t\tthe tooltip DOM node as its first argument and the\n\t\t\t\t\ttriggering element DOM node as its second. The{\" \"}\n\t\t\t\t\t<code>'this'</code>\n\t\t\t\t\tcontext is set to the tooltip instance.\n\t\t\t\t</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>selector</td>\n\t\t\t<td>string / false</td>\n\t\t\t<td>false</td>\n\t\t\t<td>\n\t\t\t\tIf a selector is provided, tooltip objects will be delegated to\n\t\t\t\tthe specified targets. In practice, this is used to also apply\n\t\t\t\ttooltips to dynamically added DOM elements (\n\t\t\t\t<code>jQuery.on</code>\n\t\t\t\tsupport).\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template</td>\n\t\t\t<td>string</td>\n\t\t\t<td>\n\t\t\t\t<code>\n\t\t\t\t\t'&lt;div class=\"tooltip\" role=\"tooltip\"&gt;&lt;div\n\t\t\t\t\tclass=\"tooltip-arrow\"&gt;&lt;/div&gt;&lt;div\n\t\t\t\t\tclass=\"tooltip-inner\"&gt;&lt;/div&gt;&lt;/div&gt;'\n\t\t\t\t</code>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<p>Base HTML to use when creating the tooltip.</p>\n\t\t\t\t<p>\n\t\t\t\t\tThe tooltip's <code>title</code> will be injected into the\n\t\t\t\t\t<code>.tooltip-inner</code>.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<code>.tooltip-arrow</code> will become the tooltip's arrow.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tThe outermost wrapper element should have the{\" \"}\n\t\t\t\t\t<code>.tooltip</code>\n\t\t\t\t\tclass and <code>role=\"tooltip\"</code>.\n\t\t\t\t</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>title</td>\n\t\t\t<td>string / element / function</td>\n\t\t\t<td />\n\t\t\t<td>\n\t\t\t\t<p>\n\t\t\t\t\tDefault title value if <code>'title</code> attribute isn't\n\t\t\t\t\tpresent.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tIf a function is given, it will be called with its{\" \"}\n\t\t\t\t\t<code>'this'</code>\n\t\t\t\t\treference set to the element that the tooltip is attached to.\n\t\t\t\t</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>trigger</td>\n\t\t\t<td>string</td>\n\t\t\t<td>'hover focus'</td>\n\t\t\t<td>\n\t\t\t\t<p>\n\t\t\t\t\tHow tooltip is triggered - click | hover | focus | manual.\n\t\t\t\t\tYou may pass multiple triggers; separate them with a space.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<code>'manual'</code> indicates that the tooltip will be\n\t\t\t\t\ttriggered programmatically via the{\" \"}\n\t\t\t\t\t<code>.tooltip('show')</code>,<code>.tooltip('hide')</code>{\" \"}\n\t\t\t\t\tand <code>.tooltip('toggle')</code> methods; this value\n\t\t\t\t\tcannot be combined with any other trigger.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<code>'hover'</code> on its own will result in tooltips that\n\t\t\t\t\tcannot be triggered via the keyboard, and should only be\n\t\t\t\t\tused if alternative methods for conveying the same\n\t\t\t\t\tinformation for keyboard users is present.\n\t\t\t\t</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>offset</td>\n\t\t\t<td>number / string / function</td>\n\t\t\t<td>0</td>\n\t\t\t<td>\n\t\t\t\t<p>offset of the tooltip relative to its target.</p>\n\t\t\t\t<p>\n\t\t\t\t\tWhen a function is used to determine the offset, it is\n\t\t\t\t\tcalled with an object containing the offset data as its\n\t\t\t\t\tfirst argument. The function must return an object with the\n\t\t\t\t\tsame structure. The triggering element DOM node is passed as\n\t\t\t\t\tthe second argument.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tFor more information refer to Popper.js's\n\t\t\t\t\t<a href=\"https://popper.js.org/popper-documentation.html#modifiers..offset.offset\">\n\t\t\t\t\t\toffset docs\n\t\t\t\t\t</a>.\n\t\t\t\t</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>fallbackPlacement</td>\n\t\t\t<td>string / array</td>\n\t\t\t<td>'flip'</td>\n\t\t\t<td>\n\t\t\t\tAllow to specify which position Popper will use on fallback. For\n\t\t\t\tmore information refer to Popper.js's\n\t\t\t\t<a href=\"https://popper.js.org/popper-documentation.html#modifiers..flip.behavior\">\n\t\t\t\t\tbehavior docs\n\t\t\t\t</a>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>boundary</td>\n\t\t\t<td>string / element</td>\n\t\t\t<td>'scrollParent'</td>\n\t\t\t<td>\n\t\t\t\tOverflow constraint boundary of the tooltip. Accepts the values\n\t\t\t\tof <code>'viewport'</code>, <code>'window'</code>,{\" \"}\n\t\t\t\t<code>'scrollParent'</code>, or an HTMLElement reference\n\t\t\t\t(JavaScript only).\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>sanitize</td>\n\t\t\t<td>boolean</td>\n\t\t\t<td>true</td>\n\t\t\t<td>\n\t\t\t\tEnable or disable the sanitization. If activated{\" \"}\n\t\t\t\t<code>'template'</code>\n\t\t\t\tand <code>'title'</code> options will be sanitized.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>whiteList</td>\n\t\t\t<td>object</td>\n\t\t\t<td>Default value</td>\n\t\t\t<td>Object which contains allowed attributes and tags</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>sanitizeFn</td>\n\t\t\t<td>null | function</td>\n\t\t\t<td>null</td>\n\t\t\t<td>\n\t\t\t\tHere you can supply your own sanitize function. This can be\n\t\t\t\tuseful if you prefer to use a dedicated library to perform\n\t\t\t\tsanitization.\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h4 {...{\n      \"id\": \"asynchronous-methods-and-transitions\"\n    }}>{`Asynchronous methods and transitions`}</h4>\n    <p>{`All API methods are `}<strong parentName=\"p\">{`asynchronous`}</strong>{` and start a `}<strong parentName=\"p\">{`transition`}</strong>{`. They return to the caller as soon as the transition is started but `}<strong parentName=\"p\">{`before it ends`}</strong>{`. In addition, a method call on a `}<strong parentName=\"p\">{`transitioning component will be ignored`}</strong><br parentName=\"p\"></br>{`\n`}{`See Bootstrap’s JavaScript documentation for more information.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$().tooltip(options)\n`}</code></pre>\n    <p>{`Attaches a tooltip handler to an element collection.`}</p>\n    <h4 {...{\n      \"id\": \"tooltipshow\"\n    }}>{`.tooltip(‘show’)`}</h4>\n    <p>{`Reveals an element’s tooltip. Returns to the caller before the tooltip has actually been shown (i.e. before the `}<inlineCode parentName=\"p\">{`shown.bs.tooltip`}</inlineCode>{` event occurs). This is considered a “manual” triggering of the tooltip. Tooltips with zero-length titles are never displayed.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#element').tooltip('show')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"tooltiphide\"\n    }}>{`.tooltip(‘hide’)`}</h4>\n    <p>{`Hides an element’s tooltip. Returns to the caller before the tooltip has actually been hidden (i.e. before the `}<inlineCode parentName=\"p\">{`hidden.bs.tooltip`}</inlineCode>{` event occurs). This is considered a “manual” triggering of the tooltip.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#element').tooltip('hide')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"tooltiptoggle\"\n    }}>{`.tooltip(‘toggle’)`}</h4>\n    <p>{`Toggles an element’s tooltip. Returns to the caller before the tooltip has actually been shown or hidden (i.e. before the `}<inlineCode parentName=\"p\">{`shown.bs.tooltip`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`hidden.bs.tooltip`}</inlineCode>{` event occurs). This is considered a “manual” triggering of the tooltip.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#element').tooltip('toggle')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"tooltipdispose\"\n    }}>{`.tooltip(‘dispose’)`}</h4>\n    <p>{`Hides and destroys an element’s tooltip. Tooltips that use delegation (which are created using the selector option) cannot be individually destroyed on descendant trigger elements.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#element').tooltip('dispose')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"tooltipenable\"\n    }}>{`.tooltip(‘enable’)`}</h4>\n    <p>{`Gives an element’s tooltip the ability to be shown. Tooltips are enabled by default.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#element').tooltip('enable')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"tooltipdisable\"\n    }}>{`.tooltip(‘disable’)`}</h4>\n    <p>{`Removes the ability for an element’s tooltip to be shown. The tooltip will only be able to be shown if it is re-enabled.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#element').tooltip('disable')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"tooltiptoggleenabled\"\n    }}>{`.tooltip(‘toggleEnabled’)`}</h4>\n    <p>{`Toggles the ability for an element’s tooltip to be shown or hidden.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#element').tooltip('toggleEnabled')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"tooltipupdate\"\n    }}>{`.tooltip(‘update’)`}</h4>\n    <p>{`Updates the position of an element’s tooltip.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#element').tooltip('update')\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h3>\n    <table class=\"table table-bordered table-striped\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th style={{\n            width: 150\n          }}>Event Type</th>\n\t\t\t<th>Description</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>show.bs.tooltip</td>\n\t\t\t<td>\n\t\t\t\tThis event fires immediately when the <code>show</code> instance\n\t\t\t\tmethod is called.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>shown.bs.tooltip</td>\n\t\t\t<td>\n\t\t\t\tThis event is fired when the tooltip has been made visible to\n\t\t\t\tthe user (will wait for CSS transitions to complete).\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>hide.bs.tooltip</td>\n\t\t\t<td>\n\t\t\t\tThis event is fired immediately when the <code>hide</code>{\" \"}\n\t\t\t\tinstance method has been called.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>hidden.bs.tooltip</td>\n\t\t\t<td>\n\t\t\t\tThis event is fired when the tooltip has finished being hidden\n\t\t\t\tfrom the user (will wait for CSS transitions to complete).\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>inserted.bs.tooltip</td>\n\t\t\t<td>\n\t\t\t\tThis event is fired after the <code>show.bs.tooltip</code> event\n\t\t\t\twhen the tooltip template has been added to the DOM.\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#myTooltip').on('hidden.bs.tooltip', function () {\n    // do something...\n})\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}