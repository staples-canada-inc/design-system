{"remainingRequest":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js!/Users/caibr002/Desktop/staples_ds_1/components/Text-Input/text_inputs.mdx","dependencies":[{"path":"/Users/caibr002/Desktop/staples_ds_1/components/Text-Input/text_inputs.mdx","mtime":1562096891000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/components/Text-Input/text_inputs.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"forms\"\n    }}>{`Forms`}</h1>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Bootstrap's form controls expand on `}{`[our Rebooted form styles]`}{`({{< docsref \"/content/reboot#forms\" >}}) with classes. Use these classes to opt into their customized displays for a more consistent rendering across browsers and devices.`}</p>\n    <p>{`Be sure to use an appropriate `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` attribute on all inputs (e.g., `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{` for email address or `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{` for numerical information) to take advantage of newer input controls like email verification, number selection, and more.`}</p>\n    <p>{`Here's a quick example to demonstrate Bootstrap's form styles. {{Keep reading for documentation on required classes, form layout, and more.}}`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-static-text-box\"\n    }}>{`Text Input for Static Text Box`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <label for=\"exampleStaticInput\">Plain Text (Static)</label>\n        <input id=\"exampleStaticInput\" plaintext value=\"Some plain text/ static value\" readonly=\"readonly\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-email\"\n    }}>{`Text Input for email`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <label for=\"exampleEmail\">Email</label>\n        <input type=\"email\" class=\"form-control\" id=\"exampleEmail\" name=\"email\" placeholder=\"with a placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-password\"\n    }}>{`Text Input for Password`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <label for=\"examplePassword\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-urls\"\n    }}>{`Text Input for URLs`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n\n    <div class=\"form-group\">\n        <label for=\"exampleUrl\">URL</label>\n        <input type=\"url\" class=\"form-control\" name=\"url\" id=\"exampleUrl\" placeholder=\"url placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"form-controls\"\n    }}>{`Form controls`}</h2>\n    <p>{`Textual form controls—like `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{`s, `}<inlineCode parentName=\"p\">{`<select>`}</inlineCode>{`s, and `}<inlineCode parentName=\"p\">{`<textarea>`}</inlineCode>{`s—are styled with the `}<inlineCode parentName=\"p\">{`.form-control`}</inlineCode>{` class. Included are styles for general appearance, focus state, sizing, and more.`}</p>\n    <p>{`Be sure to explore our `}<a parentName=\"p\" {...{\n        \"href\": \"#custom-forms\"\n      }}>{`custom forms`}</a>{` to further style `}<inlineCode parentName=\"p\">{`<select>`}</inlineCode>{`s.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-numbers\"\n    }}>{`Text Input for Numbers`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleNumber\"> Number </Label>\n        <input type=\"number\" class=\"form-control\" name=\"number\" id=\"exampleNumber\" placeholder=\"number placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-datetime\"\n    }}>{`Text Input for Datetime`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleDatetime\"> Datetime </Label>\n        <input type=\"datetime\" class=\"form-control\" name=\"datetime\" id=\"exampleDatetime\" placeholder=\"datetime placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-date\"\n    }}>{`Text Input for Date`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleDate\">Date</Label>\n        <input type=\"date\" class=\"form-control\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-time\"\n    }}>{`Text Input for Time`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleTime\">Time</Label>\n        <Input type=\"time\" class=\"form-control\" name=\"time\" id=\"exampleTime\" placeholder=\"time placeholder\">\n    </div>\n<form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-colour\"\n    }}>{`Text Input for Colour`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleColor\">Color</Label>\n        <input type=\"color\" class=\"form-control\" name=\"color\" id=\"exampleColor\" placeholder=\"color placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-search\"\n    }}>{`Text Input for Search`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleSearch\">Search</Label>\n        <input type=\"search\" name=\"search\" id=\"exampleSearch\" placeholder=\"search placeholder\" required>\n    </div>\n</form>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"select-menu\"\n    }}>{`Select menu`}</h2>\n    <p>{`Custom `}<inlineCode parentName=\"p\">{`<select>`}</inlineCode>{` menus need only a custom class, `}<inlineCode parentName=\"p\">{`.custom-select`}</inlineCode>{` to trigger the custom styles. Custom styles are limited to the `}<inlineCode parentName=\"p\">{`<select>’`}</inlineCode>{`s initial appearance and cannot modify the `}<inlineCode parentName=\"p\">{`<option>`}</inlineCode>{`s due to browser limitations.`}</p>\n    <p>{`You may also choose from small and large custom selects to match our similarly sized text inputs.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-select-menu\"\n    }}>{`Text Input for Select Menu`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <label for=\"exampleSelect\">Select</label>\n        <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n        </select>\n    </div>\n</form>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"select-multiple\"\n    }}>{`Select Multiple`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`multiple`}</inlineCode>{` attribute is also supported. As is the size attribute along with multiple.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-multiple-select-menu\"\n    }}>{`Text Input for Multiple Select Menu`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n        <select multiple class=\"form-control\" id=\"exampleFormControlSelect2\">\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n        </select>\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-text-area\"\n    }}>{`Text Input for Text Area`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-group\">\n    <label for=\"exampleFormControlTextarea1\">Label</label>\n    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Value\"></textarea>\n</div>\n`}</code></pre>\n    <p>{`For file inputs, swap the `}<inlineCode parentName=\"p\">{`.form-control`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`.form-control-file`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-file-input\"\n    }}>{`Text Input for File Input`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n<div class=\"form-group\">\n    <label for=\"exampleFormControlFile1\">Example file input</label>\n    <input type=\"file\" class=\"form-control-file\" id=\"exampleFormControlFile1\">\n</div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"validation\"\n    }}>{`Validation`}</h3>\n    <p>{`Provide valuable, actionable feedback to your users with HTML5 form validation–available in all our supported browsers. Choose from the browser default validation feedback, or implement custom messages with our built-in classes and starter JavaScript.`}</p>\n    <p>{`We currently recommend using custom validation styles, as native browser default validation messages are not consistently exposed to assistive technologies in all browsers (most notably, Chrome on desktop and mobile).`}</p>\n    <h3 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How it works`}</h3>\n    <p>{`Here’s how form validation works with Bootstrap:`}</p>\n    <p>{`HTML form validation is applied via CSS’s two pseudo-classes, :invalid and :valid. It applies to `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<select>`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`<textarea>`}</inlineCode>{` elements. Bootstrap scopes the `}<inlineCode parentName=\"p\">{`:invalid`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`:valid`}</inlineCode>{` styles to parent `}<inlineCode parentName=\"p\">{`.was-validated`}</inlineCode>{` class, usually applied to the `}<inlineCode parentName=\"p\">{`<form>`}</inlineCode>{`. Otherwise, any required field without a value shows up as invalid on page load. This way, you may choose when to activate them (typically after form submission is attempted). To reset the appearance of the form (for instance, in the case of dynamic form submissions using AJAX), remove the .was-validated class from the `}<inlineCode parentName=\"p\">{`<form>`}</inlineCode>{` again after submission. As a fallback, `}<inlineCode parentName=\"p\">{`.is-invalid`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.is-valid`}</inlineCode>{` classes may be used instead of the pseudo-classes for server side validation. They do not require a .was-validated parent class.`}</p>\n    <p>{`Due to constraints in how CSS works, we cannot (at present) apply styles to a `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{` that comes before a form control in the DOM without the help of custom JavaScript. All modern browsers support the constraint validation API, a series of JavaScript methods for validating form controls. Feedback messages may utilize the browser defaults (different for each browser, and unstylable via CSS) or our custom feedback styles with additional HTML and CSS. You may provide custom validity messages with setCustomValidity in JavaScript. With that in mind, consider the following demos for our custom form validation styles, optional server side classes, and browser defaults.`}</p>\n    <h3 {...{\n      \"id\": \"server-side\"\n    }}>{`Server side`}</h3>\n    <p>{`We recommend using client-side validation, but in case you require server-side validation, you can indicate invalid and valid form fields with `}<inlineCode parentName=\"p\">{`.is-invalid`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.is-valid.`}</inlineCode>{` Note that `}<inlineCode parentName=\"p\">{`.invalid-feedback`}</inlineCode>{` is also supported with these classes.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}