{"remainingRequest":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js!/Users/caibr002/Desktop/staples_ds_1/documentation/src/theme/components/ui/Editor/elements.tsx","dependencies":[{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/src/theme/components/ui/Editor/elements.tsx","mtime":1562018246000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9jYWlicjAwMi9EZXNrdG9wL3N0YXBsZXNfZHNfMS9kb2N1bWVudGF0aW9uL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllcyI7aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSIvVXNlcnMvY2FpYnIwMDIvRGVza3RvcC9zdGFwbGVzX2RzXzEvZG9jdW1lbnRhdGlvbi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjtmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyKCl7dmFyIGRhdGE9X3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuXHRzdHJva2U6ICIsIjtcbiJdKTtfdGVtcGxhdGVPYmplY3QyPWZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKXtyZXR1cm4gZGF0YTt9O3JldHVybiBkYXRhO31mdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKXt2YXIgZGF0YT1fdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG5cdHBhZGRpbmc6IDRweDtcblx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdGZvbnQtc2l6ZTogMTJweDtcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0dHJhbnNpdGlvbjogY29sb3IgMC4zcztcblxuXHQmLFxuXHQmIGEge1xuXHRcdGNvbG9yOiAiLCI7XG5cdH1cblxuXHQmOmhvdmVyLFxuXHQmIGE6aG92ZXIge1xuXHRcdGNvbG9yOiAiLCI7XG5cdH1cbiJdKTtfdGVtcGxhdGVPYmplY3Q9ZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCl7cmV0dXJuIGRhdGE7fTtyZXR1cm4gZGF0YTt9aW1wb3J0KmFzIFJlYWN0IGZyb20icmVhY3QiO2ltcG9ydCBCYXNlQ2hlY2sgZnJvbSJyZWFjdC1mZWF0aGVyL2Rpc3QvaWNvbnMvY2hlY2siO2ltcG9ydCBDbGlwYm9hcmQgZnJvbSJyZWFjdC1mZWF0aGVyL2Rpc3QvaWNvbnMvY2xpcGJvYXJkIjtpbXBvcnQgcmdiYSBmcm9tInBvbGlzaGVkL2xpYi9jb2xvci9yZ2JhIjtpbXBvcnQgY29weSBmcm9tImNvcHktdGV4dC10by1jbGlwYm9hcmQiO2ltcG9ydCBzdHlsZWQgZnJvbSJzdHlsZWQtY29tcG9uZW50cyI7aW1wb3J0e0J1dHRvblN3YXB9ZnJvbSIuL0J1dHRvblN3YXAiO2ltcG9ydHtnZXR9ZnJvbSIuLi8uLi8uLi91dGlscy90aGVtZSI7Ly9jb25zdCB0ZXh0Q29sb3IgPSBnZXQoImNvbG9ycy50ZXh0IiwgIiMyRDM3NDciKTsKdmFyIHRleHRDb2xvcj1nZXQoImNvbG9ycy50ZXh0IiwiI2ZmZmZmIik7ZXhwb3J0IHZhciBBY3Rpb25CdXR0b249c3R5bGVkKEJ1dHRvblN3YXApKF90ZW1wbGF0ZU9iamVjdCgpLGZ1bmN0aW9uKHApe3JldHVybiByZ2JhKHRleHRDb2xvcihwKSwwLjQpO30sZnVuY3Rpb24ocCl7cmV0dXJuIHJnYmEodGV4dENvbG9yKHApLDAuNyk7fSk7aWYodHlwZW9mIEFjdGlvbkJ1dHRvbiE9PSd1bmRlZmluZWQnJiZBY3Rpb25CdXR0b24mJkFjdGlvbkJ1dHRvbj09PU9iamVjdChBY3Rpb25CdXR0b24pJiZPYmplY3QuaXNFeHRlbnNpYmxlKEFjdGlvbkJ1dHRvbikpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShBY3Rpb25CdXR0b24sJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6IkFjdGlvbkJ1dHRvbiIsZmlsZW5hbWU6InNyYy90aGVtZS9jb21wb25lbnRzL3VpL0VkaXRvci9lbGVtZW50cy50c3gifX0pO312YXIgQ2hlY2s9c3R5bGVkKEJhc2VDaGVjaykoX3RlbXBsYXRlT2JqZWN0MigpLGdldCgiY29sb3JzLnByaW1hcnkiKSk7ZXhwb3J0IHZhciBDbGlwYm9hcmRBY3Rpb249ZnVuY3Rpb24gQ2xpcGJvYXJkQWN0aW9uKF9yZWYpe3ZhciBjb250ZW50PV9yZWYuY29udGVudCxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbnRlbnQiXSk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQWN0aW9uQnV0dG9uLE9iamVjdC5hc3NpZ24oe30scHJvcHMse3RpdGxlOiJDb3B5IHRvIGNsaXBib2FyZCIsb25DbGljazpmdW5jdGlvbiBvbkNsaWNrKCl7cmV0dXJuIGNvcHkoY29udGVudCk7fSxzd2FwOlJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hlY2sse3dpZHRoOjE3fSl9KSxSZWFjdC5jcmVhdGVFbGVtZW50KENsaXBib2FyZCx7d2lkdGg6MTV9KSk7fTtpZih0eXBlb2YgQ2xpcGJvYXJkQWN0aW9uIT09J3VuZGVmaW5lZCcmJkNsaXBib2FyZEFjdGlvbiYmQ2xpcGJvYXJkQWN0aW9uPT09T2JqZWN0KENsaXBib2FyZEFjdGlvbikmJk9iamVjdC5pc0V4dGVuc2libGUoQ2xpcGJvYXJkQWN0aW9uKSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KENsaXBib2FyZEFjdGlvbiwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiQ2xpcGJvYXJkQWN0aW9uIixmaWxlbmFtZToic3JjL3RoZW1lL2NvbXBvbmVudHMvdWkvRWRpdG9yL2VsZW1lbnRzLnRzeCJ9fSk7fQ=="},{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/src/theme/components/ui/Editor/elements.tsx"],"names":["React","BaseCheck","Clipboard","rgba","copy","styled","ButtonSwap","get","textColor","ActionButton","p","Check","ClipboardAction","content","props"],"mappings":"+2BAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,GAAT,KAAoB,sBAApB,CAEA;AACA,GAAMC,CAAAA,SAAS,CAAGD,GAAG,CAAC,aAAD,CAAgB,QAAhB,CAArB,CAEA,MAAO,IAAME,CAAAA,YAAY,CAAGJ,MAAM,CAACC,UAAD,CAAT,mBASd,SAAAI,CAAC,QAAIP,CAAAA,IAAI,CAACK,SAAS,CAACE,CAAD,CAAV,CAAe,GAAf,CAAR,EATa,CAcd,SAAAA,CAAC,QAAIP,CAAAA,IAAI,CAACK,SAAS,CAACE,CAAD,CAAV,CAAe,GAAf,CAAR,EAda,CAAlB,C,qSAkBP,GAAMC,CAAAA,KAAK,CAAGN,MAAM,CAACJ,SAAD,CAAT,oBACAM,GAAG,CAAC,gBAAD,CADH,CAAX,CAQA,MAAO,IAAMK,CAAAA,eAA0C,CAAG,QAA7CA,CAAAA,eAA6C,UACzDC,CAAAA,OADyD,MACzDA,OADyD,CAEtDC,KAFsD,kDAIzD,qBAAC,YAAD,kBACKA,KADL,EAEC,KAAK,CAAC,mBAFP,CAGC,OAAO,CAAE,yBAAMV,CAAAA,IAAI,CAACS,OAAD,CAAV,EAHV,CAIC,IAAI,CAAE,oBAAC,KAAD,EAAO,KAAK,CAAE,EAAd,EAJP,GAMC,oBAAC,SAAD,EAAW,KAAK,CAAE,EAAlB,EAND,CAJyD,EAAnD,C","sourcesContent":["import * as React from \"react\";\nimport { SFC } from \"react\";\nimport BaseCheck from \"react-feather/dist/icons/check\";\nimport Clipboard from \"react-feather/dist/icons/clipboard\";\nimport rgba from \"polished/lib/color/rgba\";\nimport copy from \"copy-text-to-clipboard\";\nimport styled from \"styled-components\";\n\nimport { ButtonSwap } from \"./ButtonSwap\";\nimport { get } from \"../../../utils/theme\";\n\n//const textColor = get(\"colors.text\", \"#2D3747\");\nconst textColor = get(\"colors.text\", \"#fffff\");\n\nexport const ActionButton = styled(ButtonSwap)`\n\tpadding: 4px;\n\tbackground: transparent;\n\tfont-size: 12px;\n\ttext-transform: uppercase;\n\ttransition: color 0.3s;\n\n\t&,\n\t& a {\n\t\tcolor: ${p => rgba(textColor(p), 0.4)};\n\t}\n\n\t&:hover,\n\t& a:hover {\n\t\tcolor: ${p => rgba(textColor(p), 0.7)};\n\t}\n`;\n\nconst Check = styled(BaseCheck)`\n\tstroke: ${get(\"colors.primary\")};\n`;\n\ninterface ClipboardActionProps {\n\tcontent: string;\n}\n\nexport const ClipboardAction: SFC<ClipboardActionProps> = ({\n\tcontent,\n\t...props\n}) => (\n\t<ActionButton\n\t\t{...props}\n\t\ttitle=\"Copy to clipboard\"\n\t\tonClick={() => copy(content)}\n\t\tswap={<Check width={17} />}\n\t>\n\t\t<Clipboard width={15} />\n\t</ActionButton>\n);\n"]}]}