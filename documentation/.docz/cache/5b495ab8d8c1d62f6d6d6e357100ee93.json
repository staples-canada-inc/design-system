{"remainingRequest":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js!/Users/caibr002/Desktop/staples_ds_1/documentation/components/Checkbox/checkboxes.mdx","dependencies":[{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/components/Checkbox/checkboxes.mdx","mtime":1562156392000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/components/Checkbox/checkboxes.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"checkboxes\"\n    }}>{`Checkboxes`}</h1>\n    <p>{`Default checkboxes and radios are improved upon with the help of `}<inlineCode parentName=\"p\">{`.form-check`}</inlineCode>{`, a single class for both input types that improves the layout and behavior of their HTML elements. Checkboxes are for selecting one or several options in a list, while radios are for selecting one option from many.`}</p>\n    <p>{`Checkboxes and radios use are built to support HTML-based form validation and provide concise, accessible labels. As such, our `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{`s and `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{`s are sibling elements as opposed to an `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{` within a `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{`. This is slightly more verbose as you must specify id and for attributes to relate the `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"examples-of-documentation---checkboxes\"\n    }}>{`Examples oF Documentation - Checkboxes`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" name=\"exampleCustomCheckbox\" id=\"customCheckbox1\" value=\"option1\" checked>\n    <label class=\"form-check-label\" for=\"customCheckbox1\">\n        Default checkbox\n    </label>\n</div>\n<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" name=\"exampleCustomCheckbox\" id=\"customCheckbox2\" value=\"option2\">\n    <label class=\"form-check-label\" for=\"customCheckbox2\">\n        Second default checkbox\n</label>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"disabled-checkboxes\"\n    }}>{`Disabled Checkboxes`}</h2>\n    <p>{`Disabled checkboxes and radios are supported. The disabled attribute will apply a lighter color to help indicate the input’s state.`}</p>\n    <h3 {...{\n      \"id\": \"examples-of-documentation---disabled-checkboxes\"\n    }}>{`Examples oF Documentation - Disabled Checkboxes`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" name=\"exampleCustomCheckbox1\" id=\"customCheckbox3\" value=\"option3\" disabled>\n    <label class=\"form-check-label\" for=\"customCheckbox3\">\n        Disabled checkbox\n    </label>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"default-stacked\"\n    }}>{`Default (stacked)`}</h3>\n    <p>{`By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with `}<inlineCode parentName=\"p\">{`.form-check`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"examples-of-documentation---default-stacked\"\n    }}>{`Examples oF Documentation - Default (stacked)`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\">\n    <label class=\"form-check-label\" for=\"defaultCheck1\">\n        Default checkbox\n    </label>\n</div>\n<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck2\" disabled>\n    <label class=\"form-check-label\" for=\"defaultCheck2\">\n        Disabled checkbox\n    </label>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"inline\"\n    }}>{`Inline`}</h3>\n    <p>{`Group checkboxes or radios on the same horizontal row by adding `}<inlineCode parentName=\"p\">{`.form-check-inline`}</inlineCode>{` to any `}<inlineCode parentName=\"p\">{`.form-check`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"examples-of-documentation---inline\"\n    }}>{`Examples oF Documentation - Inline`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\">\n    <label class=\"form-check-label\" for=\"inlineCheckbox1\">1</label>\n</div>\n<div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\">\n    <label class=\"form-check-label\" for=\"inlineCheckbox2\">2</label>\n</div>\n<div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" value=\"option3\" disabled>\n    <label class=\"form-check-label\" for=\"inlineCheckbox3\">3 (disabled)</label>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"without-labels\"\n    }}>{`Without labels`}</h3>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`.position-static`}</inlineCode>{` to inputs within `}<inlineCode parentName=\"p\">{`.form-check`}</inlineCode>{` that don’t have any label text. Remember to still provide some form of label for assistive technologies (for instance, using `}<inlineCode parentName=\"p\">{`aria-label`}</inlineCode>{`).`}</p>\n    <h3 {...{\n      \"id\": \"examples-of-documentation---radio-without-labels\"\n    }}>{`Examples oF Documentation - Radio without Labels`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check\">\n    <input class=\"form-check-input position-static\" type=\"checkbox\" id=\"blankCheckbox\" value=\"option1\" aria-label=\"...\">\n</div>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}