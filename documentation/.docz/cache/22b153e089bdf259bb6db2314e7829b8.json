{"remainingRequest":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js!/Users/caibr002/Desktop/staples_ds_1/documentation/src/theme/components/ui/CodeMirror/index.tsx","dependencies":[{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/src/theme/components/ui/CodeMirror/index.tsx","mtime":1562009983000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/src/theme/components/ui/CodeMirror/index.tsx"],"names":["React","useEffect","useRef","useConfig","Controlled","BaseCodeMirror","PerfectScrollbar","styled","get","ScrollbarStyles","themes","Scrollbar","p","linesToScroll","preStyles","EditorStyled","dark","light","scrollbarOpts","wheelSpeed","wheelPropagation","minScrollbarLength","suppressScrollX","noCurrent","val","current","CodeMirror","props","themeConfig","editor","forceUpdateEditorTimeout","previousEditor","linesToScrollEditor","editorProps","editorDidMount","codemirror","refreshCodeMirror","refresh","clearForceUpdateCodeMirror","clearTimeout","forceUpdateCodeMirror","setTimeout","currentHeight","getScrollInfo","height","hasNoHeight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useRef, SFC } from \"react\";\nimport { useConfig } from \"docz\";\nimport { Controlled as BaseCodeMirror } from \"react-codemirror2\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport styled from \"styled-components\";\n\nimport { get } from \"../../../utils/theme\";\n\nimport { ScrollbarStyles } from \"./ps-scrollbar\";\nimport * as themes from \"./themes\";\n\nimport \"codemirror/mode/markdown/markdown\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/jsx/jsx\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/fold/xml-fold\";\n\nconst Scrollbar = styled(PerfectScrollbar)`\n\toverflow: auto;\n\tposition: relative;\n\tmax-height: ${p => 25 * p.linesToScroll}px;\n\n\t.ps__rail-y {\n\t\tz-index: 9;\n\t\topacity: 0.4;\n\t}\n`;\n\nconst preStyles = get(\"styles.pre\");\nconst EditorStyled = styled(BaseCodeMirror)`\n\t${themes.dark};\n\t${themes.light};\n\tposition: relative;\n\tflex: 1;\n\n\t.CodeMirror {\n\t\tmax-width: 100%;\n\t\theight: 100%;\n\t}\n\n\t.CodeMirror-gutters {\n\t\tleft: 1px !important;\n\t}\n\n\t.CodeMirror-lines {\n\t\tpadding: 10px 0;\n\t\tbox-sizing: content-box;\n\t}\n\n\t.CodeMirror-line {\n\t\tpadding: 0 10px;\n\t}\n\n\t.CodeMirror-linenumber {\n\t\tpadding: 0 7px 0 5px;\n\t}\n\n\t&,\n\t.CodeMirror pre {\n\t\t${preStyles};\n\t}\n`;\n\nconst scrollbarOpts = {\n\twheelSpeed: 2,\n\twheelPropagation: true,\n\tminScrollbarLength: 20,\n\tsuppressScrollX: true\n};\n\nconst noCurrent = (val: any) => !val || !val.current;\n\nconst CodeMirror: SFC<any> = props => {\n\tconst { themeConfig } = useConfig();\n\tconst editor = useRef<any>(null);\n\tconst forceUpdateEditorTimeout = useRef(0);\n\tconst previousEditor = useRef(0);\n\tconst linesToScroll = themeConfig.linesToScrollEditor || 14;\n\n\tconst editorProps = {\n\t\t...props,\n\t\teditorDidMount: (codemirror: any) => {\n\t\t\tprops.editorDidMount && props.editorDidMount(codemirror);\n\t\t\teditor.current = codemirror;\n\t\t}\n\t};\n\n\tconst refreshCodeMirror = () => {\n\t\tif (noCurrent(editor)) return;\n\t\teditor.current.refresh();\n\t};\n\n\tconst clearForceUpdateCodeMirror = () => {\n\t\tif (noCurrent(forceUpdateEditorTimeout)) return;\n\t\tclearTimeout(forceUpdateEditorTimeout.current);\n\t};\n\n\tconst forceUpdateCodeMirror = () => {\n\t\tif (noCurrent(editor)) return;\n\t\tclearForceUpdateCodeMirror();\n\n\t\tforceUpdateEditorTimeout.current = setTimeout(() => {\n\t\t\tconst currentHeight = editor.current.getScrollInfo().height || 0;\n\t\t\tconst hasNoHeight = currentHeight <= 0;\n\n\t\t\t// Don't refresh if no height (CodeMirror is not visible) or\n\t\t\t// Don't refresh if same height\n\t\t\tif (hasNoHeight || previousEditor === currentHeight) return;\n\t\t\trefreshCodeMirror();\n\t\t\tpreviousEditor.current = editor.current.getScrollInfo().height || 0;\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tforceUpdateCodeMirror();\n\t\treturn () => clearForceUpdateCodeMirror();\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ScrollbarStyles />\n\t\t\t<Scrollbar options={scrollbarOpts} linesToScroll={linesToScroll}>\n\t\t\t\t<EditorStyled {...editorProps} />\n\t\t\t</Scrollbar>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default CodeMirror;\n"]}]}