{"remainingRequest":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js!/Users/caibr002/Desktop/staples_ds_1/documentation/components/Modal/modal.mdx","dependencies":[{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/components/Modal/modal.mdx","mtime":1563467409000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/caibr002/Desktop/staples_ds_1/documentation/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/components/Modal/modal.mdx"],"names":["React","mdx","Playground","Props","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalDemo1","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","width","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AACF,SAASC,UAAT,EAAqBC,KAArB,QAAkC,MAAlC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;AACA,OAAOC,UAAP,MAAuB,SAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+QALK,EAML,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANK,EASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAA4C;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5C,WAAyG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzG,wNATK,EAUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAVK,EAWL,IAAC,UAAD;AAAY,IAAA,UAAU,EAAE,CAAxB;AAA2B,IAAA,MAAM,EAAE,0WAAnC;AAA+Y,IAAA,OAAO,EAAE;AACtZN,MAAAA,KAAK,EAAE,OAAO,KAAKA,KAAZ,GAAoBA,KAD2X;AAEtZX,MAAAA,UAAU,EAAVA,UAFsZ;AAGtZC,MAAAA,KAAK,EAALA,KAHsZ;AAItZC,MAAAA,MAAM,EAANA,MAJsZ;AAKtZC,MAAAA,KAAK,EAALA,KALsZ;AAMtZC,MAAAA,WAAW,EAAXA,WANsZ;AAOtZC,MAAAA,SAAS,EAATA,SAPsZ;AAQtZC,MAAAA,WAAW,EAAXA,WARsZ;AAStZC,MAAAA,UAAU,EAAVA;AATsZ,KAAxZ;AAUG,IAAA,OAAO,EAAC,YAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWH,IAAC,UAAD;AAAY,IAAA,UAAU,EAAC,aAAvB;AAAqC,IAAA,WAAW,EAAC,mBAAjD;AAAqE,IAAA,YAAY,EAAC,mQAAlF;AAAsV,IAAA,OAAO,EAAC,YAA9V;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXG,CAXK,EAwBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6nDAAL,CAxBK,EAqDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DArDK,EAsDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8UAAL,CAtDK,EA+DL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA/DK,EAkEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GAAyG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAzG,UAAqL;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAArL,+DAlEK,EAmEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,46CAAL,CAnEK,EAgGL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhGK,EAmGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAAyD;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAzD,kBAAqI;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArI,0EAnGK,EAoGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAAuF;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAvF,qGApGK,EAqGL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArGK,EAwGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8ZAAL,CAxGK,EAmHL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnHK,EAsHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8ZAAL,CAtHK,EAiIL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAjIK,EAoIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAX,UAAqF;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAArF,qCApIK,EAqIL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BArIK,EAwIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8JAxIK,EAyIL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzIK,EA4IL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAlB,oTAA+X;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/X,mCA5IK,EA6IL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4JA7IK,EA8IL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GAAL,CA9IK,EAoJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAA8G;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA9G,cAAiL;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjL,8DAA+R;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA/R,yFApJK,EAqJL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BArJK,EAwJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAA2D;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA3D,4DAAoL;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApL,UAA0P;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA1P,2CAxJK,EAyJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGAAL,CAzJK,EA2JL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA3JK,EA8JL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEA9JK,EA+JL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAL,CA/JK,EAiKL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjKK,EAoKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAA+G;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/G,cAA4K;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA5K,MApKK,EAqKL;AAAO,aAAM,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,KAAK,EAAE;AACFW,MAAAA,KAAK,EAAE;AADL,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAIC;AAAI,IAAA,KAAK,EAAE;AACFA,MAAAA,KAAK,EAAE;AADL,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,EAOC;AAAI,IAAA,KAAK,EAAE;AACFA,MAAAA,KAAK,EAAE;AADL,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVD,CADD,CADG,EAeH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvB,CAFD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAC2D,GAD3D,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,4DAND,CADD,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJD,CAbD,EAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAJD,CAnBD,EAyBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJD,CAzBD,CAfG,CArKK,EAqNL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArNK,EAwNL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxNK,EA2NL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EA3NK,EA4NL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAL,CA5NK,EAgOL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAhOK,EAmOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4KAnOK,EAoOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAL,CApOK,EAsOL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAtOK,EAyOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6IAzOK,EA0OL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAL,CA1OK,EA4OL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA5OK,EA+OL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+IA/OK,EAgPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAL,CAhPK,EAkPL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAlPK,EAqPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIArPK,EAsPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAL,CAtPK,EAwPL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAxPK,EA2PL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA3PK,EA4PL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA5PK,EA+PL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gJAA8I;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA9I,OA/PK,EAgQL;AAAO,aAAM,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,KAAK,EAAE;AACFA,MAAAA,KAAK,EAAE;AADL,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJD,CADD,CADG,EASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADvC,gGAGkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHlB,4BAFD,CADD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wLAGgD,GAHhD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJD,4BAFD,CAVD,EAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD1C,EAC4D,GAD5D,qCAFD,CAnBD,EA0BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+HAFD,CA1BD,CATG,CAhQK,EA4SL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAAL,CA5SK,CAAP;AAiTD;;;;;;;;;;;;;AAEDF,UAAU,CAACG,cAAX,GAA4B,IAA5B;;;;;;;;;;0BAhUMX,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport ModalDemo1 from \"./Modal\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <p>{`Modals are built with HTML, CSS and JavaScript. They're positioned over everything else on a page and call the user's immediate attention. Therefore, only one modal can be supported at a time. Clicking on the modal \"backdrop\" will automatically close the modal.`}</p>\n    <h2 {...{\n      \"id\": \"static-modal\"\n    }}>{`Static Modal`}</h2>\n    <p>{`Below is a static modal (meaning its `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` have been overridden) with a header, body (required for padding) and buttons (optional). We ask that you include modal headers with dismiss actions whenever possible, or provide another explicit dismiss action.`}</p>\n    <p>{`Here is an example of a simple modal:`}</p>\n    <Playground __position={0} __code={'<ModalDemo1\\n  modalTitle=\\\"Modal title\\\"\\n  buttonLabel=\\\"Launch demo modal\\\"\\n  modalContent=\\\"Modal content goes here. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Modal,\n      ModalHeader,\n      ModalBody,\n      ModalFooter,\n      ModalDemo1\n    }} mdxType=\"Playground\">\n\t<ModalDemo1 modalTitle=\"Modal title\" buttonLabel=\"Launch demo modal\" modalContent=\"Modal content goes here. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\" mdxType=\"ModalDemo1\" />\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<!-- Button trigger modal -->\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n    Launch demo modal\n</button>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header p-4\">\n                <h4 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n        <svg class=\"Header-navToggleIcon Header-navToggleIcon--open\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path d=\"M19 6.4L17.6 5 12 10.6 6.4 5 5 6.4 10.6 12 5 17.6 6.4 19 12 13.4 17.6 19 19 17.6 13.4 12z\"/>\n        </svg>\n        </button>\n            </div>\n            <div class=\"modal-body p-4\">\n                Modal content goes here. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            </div>\n            <div class=\"modal-footer p-4\">\n                <a href=\"#\" data-dismiss=\"modal\"><strong>Close</strong></a>\n                <button type=\"button\" class=\"btn btn-primary ml-3\">Save changes</button>\n            </div>\n        </div>\n    </div>\n</div>\n`}</code></pre>\n    <p>{`Or you can have two buttons in the footer like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<div>\n    <div class=\"col-md-6 ml-auto\">\n        <button type=\"button\" class=\"btn btn-primary btn-block mt-0\">Agree</button>\n    </div>\n    <div class=\"col-md-6 ml-auto\">\n        <button type=\"button\" class=\"btn btn-tertiary btn-block align-middle\" data-dismiss=\"modal\">Close</button>\n    </div>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"scrollable-modal\"\n    }}>{`Scrollable Modal`}</h2>\n    <p>{`You can also create a scrollable modal that allows the user to scroll the modal content by adding `}<inlineCode parentName=\"p\">{`.modal-dialog-scrollable`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`.modal-dialog`}</inlineCode>{`. This is typically used for consent forms and agreements.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<!-- Button trigger modal -->\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n    Launch demo modal\n</button>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header p-4\">\n                <h4 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n        <svg class=\"Header-navToggleIcon Header-navToggleIcon--open\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path d=\"M19 6.4L17.6 5 12 10.6 6.4 5 5 6.4 10.6 12 5 17.6 6.4 19 12 13.4 17.6 19 19 17.6 13.4 12z\"/>\n        </svg>\n        </button>\n            </div>\n            <div class=\"modal-body p-4\">\n                Modal content goes here.\n            </div>\n            <div class=\"modal-footer p-4\">\n                <a href=\"#\" data-dismiss=\"modal\"><strong>Close</strong></a>\n                <button type=\"button\" class=\"btn btn-primary ml-3\">Save changes</button>\n            </div>\n        </div>\n    </div>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"sizing--layout\"\n    }}>{`Sizing & Layout`}</h2>\n    <p>{`Utilize the grid system within a modal by nesting `}<inlineCode parentName=\"p\">{`.container-fluid`}</inlineCode>{` within the `}<inlineCode parentName=\"p\">{`.modal-body`}</inlineCode>{`. Then use the normal grid system classes as you would anywhere else.`}</p>\n    <p>{`Modals have two optional sizes available via modifier classes to be placed on a `}<inlineCode parentName=\"p\">{`.modal-dialog`}</inlineCode>{`. These sizes kick in at certain breakpoints to avoid horizontal scrollbars on narrow viewports.`}</p>\n    <h3 {...{\n      \"id\": \"large-modal\"\n    }}>{`Large Modal`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<!-- Large modal -->\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">Large modal</button>\n\n<div class=\"modal fade bd-example-modal-lg\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n<div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n    ...\n    </div>\n</div>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"small-modal\"\n    }}>{`Small Modal`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<!-- Small modal -->\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-sm\">Small modal</button>\n\n<div class=\"modal fade bd-example-modal-sm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\n<div class=\"modal-dialog modal-sm\">\n    <div class=\"modal-content\">\n    ...\n    </div>\n</div>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"vertically-centered\"\n    }}>{`Vertically Centered`}</h3>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`.modal-dialog-centered`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`.modal-dialog`}</inlineCode>{` to vertically center the modal.`}</p>\n    <h3 {...{\n      \"id\": \"tooltips-and-popovers\"\n    }}>{`Tooltips and Popovers`}</h3>\n    <p>{`Tooltips and popovers can be placed within modals as needed. When modals are closed, any tooltips or popovers within are also automatically dismissed.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Modals use `}<inlineCode parentName=\"p\">{`position: fixed`}</inlineCode>{`, which can sometimes be a bit particular about its rendering. There are some caveats with using modals on mobile devices because of this. Whenever possible, place your modal HTML in a top-level position to avoid potential interference from other elements. You'll likely run into issues when nesting a `}<inlineCode parentName=\"p\">{`.modal`}</inlineCode>{` within another fixed element.`}</p>\n    <p>{`Due to the way HTML5 defines its semantics, the autofocus HTML attribute has no effect on modals. To achieve the same effect, use custom JavaScript.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`$(\"#myModal\").on(\"shown.bs.modal\", function() {\n    $(\"#myInput\").trigger(\"focus\");\n});\n`}</code></pre>\n    <p>{`The modal plugin toggles your hidden content on demand via data attributes or JavaScript. It also adds `}<inlineCode parentName=\"p\">{`.modal-open`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`<body>`}</inlineCode>{` to override default scrolling behavior and generates a `}<inlineCode parentName=\"p\">{`.modal-backdrop`}</inlineCode>{` to provide a click area for dismissing open modals when clicking outside the modal.`}</p>\n    <h3 {...{\n      \"id\": \"via-data-attributes\"\n    }}>{`Via Data Attributes`}</h3>\n    <p>{`To activate a modal without writing JavaScript, set `}<inlineCode parentName=\"p\">{`data-toggle=\"modal\"`}</inlineCode>{` on a controller element, like a button, along with a `}<inlineCode parentName=\"p\">{`data-target=\"#foo\"`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`href=\"#foo\"`}</inlineCode>{` to target a specific modal to toggle.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<button type=\"button\" data-toggle=\"modal\" data-target=\"#myModal\">Launch modal</button>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"via-javascript\"\n    }}>{`Via JavaScript`}</h3>\n    <p>{`Call a modal with id myModal with a single line of JavaScript:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#myModal').modal(options)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h3>\n    <p>{`Options can be passed via data attributes or JavaScript. For data attributes, append the option name to `}<inlineCode parentName=\"p\">{`data-`}</inlineCode>{`, as in `}<inlineCode parentName=\"p\">{`data-backdrop=\"\"`}</inlineCode>{`.`}</p>\n    <table class=\"table table-bordered table-striped\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th style={{\n            width: 100\n          }}>Name</th>\n\t\t\t<th style={{\n            width: 50\n          }}>Type</th>\n\t\t\t<th style={{\n            width: 50\n          }}>Default</th>\n\t\t\t<th>Description</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>backdrop</td>\n\t\t\t<td>\n\t\t\t\tboolean or the string <code>'static'</code>\n\t\t\t</td>\n\t\t\t<td>true</td>\n\t\t\t<td>\n\t\t\t\tIncludes a modal-backdrop element. Alternatively, specify{\" \"}\n\t\t\t\t<code>static</code> for a backdrop which doesn't close the modal\n\t\t\t\ton click.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>keyboard</td>\n\t\t\t<td>boolean</td>\n\t\t\t<td>true</td>\n\t\t\t<td>Closes the modal when escape key is pressed</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>focus</td>\n\t\t\t<td>boolean</td>\n\t\t\t<td>true</td>\n\t\t\t<td>Puts the focus on the modal when initialized.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>show</td>\n\t\t\t<td>boolean</td>\n\t\t\t<td>true</td>\n\t\t\t<td>Shows the modal when initialized.</td>\n\t\t</tr>\n\t</tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <h4 {...{\n      \"id\": \"modaloptions\"\n    }}>{`.modal(options)`}</h4>\n    <p>{`Activates your content as a modal. Accepts an optional options object.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#myModal').modal({\n    keyboard: false\n})\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"modaltoggle\"\n    }}>{`.modal('toggle')`}</h4>\n    <p>{`Manually toggles a modal. Returns to the caller before the modal has actually been shown or hidden (i.e. before the shown.bs.modal or hidden.bs.modal event occurs).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#myModal').modal('toggle')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"modalshow\"\n    }}>{`.modal('show')`}</h4>\n    <p>{`Manually opens a modal. Returns to the caller before the modal has actually been shown (i.e. before the shown.bs.modal event occurs).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#myModal').modal('show')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"modalhide\"\n    }}>{`.modal('hide')`}</h4>\n    <p>{`Manually hides a modal. Returns to the caller before the modal has actually been hidden (i.e. before the hidden.bs.modal event occurs).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#myModal').modal('hide')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"modalhandleupdate\"\n    }}>{`.modal('handleUpdate')`}</h4>\n    <p>{`Manually readjust the modal’s position if the height of a modal changes while it is open (i.e. in case a scrollbar appears).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#myModal').modal('handleUpdate')\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"modaldispose\"\n    }}>{`.modal('dispose')`}</h4>\n    <p>{`Destroys an element’s modal.`}</p>\n    <h3 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h3>\n    <p>{`The modal class exposes a few events for hooking into modal functionality. All modal events are fired at the modal itself (i.e. at the `}<inlineCode parentName=\"p\">{`<div class=\"modal\">`}</inlineCode>{`).`}</p>\n    <table class=\"table table-bordered table-striped\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th style={{\n            width: 150\n          }}>Event Type</th>\n\t\t\t<th>Description</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>show.bs.modal</td>\n\t\t\t<td>\n\t\t\t\tThis event fires immediately when the <code>show</code> instance\n\t\t\t\tmethod is called. If caused by a click, the clicked element is\n\t\t\t\tavailable as the <code>relatedTarget</code> property of the\n\t\t\t\tevent.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>shown.bs.modal</td>\n\t\t\t<td>\n\t\t\t\tThis event is fired when the modal has been made visible to the\n\t\t\t\tuser (will wait for CSS transitions to complete). If caused by a\n\t\t\t\tclick, the clicked element is available as the{\" \"}\n\t\t\t\t<code>relatedTarget</code> property of the event.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>hide.bs.modal</td>\n\t\t\t<td>\n\t\t\t\tThis event is fired immediately when the <code>hide</code>{\" \"}\n\t\t\t\tinstance method has been called.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>hidden.bs.modal</td>\n\t\t\t<td>\n\t\t\t\tThis event is fired when the modal has finished being hidden\n\t\t\t\tfrom the user (will wait for CSS transitions to complete).\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{}}>{`$('#myModal').on('hidden.bs.modal', function (e) {\n    // do something...\n})\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}