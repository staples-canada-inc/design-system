{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/components/Spinners/spinners.md","/Users/caibr002/Desktop/staples_ds_1/documentation/components/Spinners/SpinnerStaples.js","/Users/caibr002/Desktop/staples_ds_1/documentation/components/Spinners/spinners.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_caibr002_Desktop_staples_ds_1_documentation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","isMDXComponent","SpinnerStaples","className","cssModule","type","size","color","children","Tag","tag","attributes","objectWithoutProperties","classes","mapToCssModules","classNames","concat","react_default","a","createElement","role","Fragment","defaultProps","index_es","index_esm","__position","__code","__scope","this","Playground","Props","Spinner","Spinners_SpinnerStaples"],"mappings":"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","file":"static/js/components-spinners-spinners.76be8a55.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"spinner\"\n    }}>{`Spinner`}</h1>\n    <p>{`Staples' spinners can be used to show the loading state in your projects. They’re built with only HTML and CSS, meaning you don’t need any JavaScript to create them. You will, however, need some custom JavaScript to toggle their visibility. Their appearance, alignment, and sizing can be easily customized with our amazing utility classes.`}</p>\n    <h3 {...{\n      \"id\": \"primary-spinner\"\n    }}>{`Primary Spinner`}</h3>\n    <p>{`  This is the primary custom spinner built for Staples Canada.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<div>\n  <SpinnerStaples size=\"sm\">Loading...</SpinnerStaples>\n  <SpinnerStaples>Loading...</SpinnerStaples>\n  <SpinnerStaples size=\"lg\">Loading...</SpinnerStaples>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"secondary-spinner\"\n    }}>{`Secondary Spinner`}</h3>\n    <p>{`  This is the secondary spinner to be used in cases where the primary spinner is not ideal.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"spinner-border text-secondary\" role=\"status\">\n  <span class=\"sr-only\">Loading...</span>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"assistive-technology\"\n    }}>{`Assistive Technology`}</h3>\n    <p>{`For accessibility purposes, each loader here includes `}<inlineCode parentName=\"p\">{`role=\"status\"`}</inlineCode>{` and a nested `}<inlineCode parentName=\"p\">{`<span class=\"sr-only\">Loading...</span>`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from 'reactstrap/src/utils';\n\nconst propTypes = {\n    tag: tagPropType,\n    type: PropTypes.string,\n    size: PropTypes.string,\n    color: PropTypes.string,\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    tag: 'div',\n    type: 'staples',\n    children: 'Loading...'\n};\n\nconst SpinnerStaples = props => {\n    const {\n        className,\n        cssModule,\n        type,\n        size,\n        color,\n        children,\n        tag: Tag,\n        ...attributes\n    } = props;\n\n    const classes = mapToCssModules(\n        classNames(\n            className,\n            size ? `spinner-staples-${size}` : false,\n            `spinner-${type}`,\n            color ? `text-${color}` : false\n        ),\n        cssModule\n    );\n\n    return (\n        <Tag role=\"status\" {...attributes} className={classes}>\n            <React.Fragment>\n                <div className=\"square\"></div>\n                <div className=\"square\"></div>\n                <span className=\"sr-only\">{children}</span>\n            </React.Fragment>\n        </Tag>\n    );\n};\n\nSpinnerStaples.propTypes = propTypes;\nSpinnerStaples.defaultProps = defaultProps;\n\nexport default SpinnerStaples;","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport SpinnerStaples from \"./SpinnerStaples\";\nimport { Spinner } from \"reactstrap\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"spinners\"\n    }}>{`Spinners`}</h1>\n    <p>{`Staples' spinners can be used to show the loading state in your projects. They’re built with only HTML and CSS, meaning you don’t need any JavaScript to create them. You will, however, need some custom JavaScript to toggle their visibility. Their appearance, alignment, and sizing can be easily customized with our amazing utility classes`}</p>\n    <h3 {...{\n      \"id\": \"primary-spinners\"\n    }}>{`Primary Spinners`}</h3>\n    <p>{`This is the primary custom spinner built for Staples Canada.`}</p>\n    <Playground __position={0} __code={'<SpinnerStaples className=\\\"mr-5\\\" size=\\\"sm\\\">\\n  Loading...\\n</SpinnerStaples>\\n<SpinnerStaples className=\\\"mr-5\\\">Loading...</SpinnerStaples>\\n<SpinnerStaples size=\\\"lg\\\">Loading...</SpinnerStaples>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      SpinnerStaples,\n      Spinner\n    }} mdxType=\"Playground\">\n\t<SpinnerStaples className=\"mr-5\" size=\"sm\" mdxType=\"SpinnerStaples\">\n\t\tLoading...\n\t</SpinnerStaples>\n\t<SpinnerStaples className=\"mr-5\" mdxType=\"SpinnerStaples\">Loading...</SpinnerStaples>\n\t<SpinnerStaples size=\"lg\" mdxType=\"SpinnerStaples\">Loading...</SpinnerStaples>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<div role=\"status\" class=\"spinner-staples\">\n    <div class=\"square\"></div>\n    <div class=\"square\"></div>\n    <span class=\"sr-only\">Loading...</span>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"secondary-spinner\"\n    }}>{`Secondary Spinner`}</h3>\n    <p>{`This is the secondary spinner to be used in cases where the primary spinner is not ideal.`}</p>\n    <Playground __position={1} __code={'<Spinner color=\\\"secondary\\\" size=\\\"sm\\\">\\n  Loading...\\n</Spinner>\\n<Spinner color=\\\"secondary\\\">Loading...</Spinner>\\n<Spinner color=\\\"secondary\\\" size=\\\"lg\\\">\\n  Loading...\\n</Spinner>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      SpinnerStaples,\n      Spinner\n    }} mdxType=\"Playground\">\n\t<Spinner color=\"secondary\" size=\"sm\" mdxType=\"Spinner\">\n\t\tLoading...\n\t</Spinner>\n\t<Spinner color=\"secondary\" mdxType=\"Spinner\">Loading...</Spinner>\n\t<Spinner color=\"secondary\" size=\"lg\" mdxType=\"Spinner\">\n\t\tLoading...\n\t</Spinner>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"spinner-border text-secondary\" role=\"status\">\n  <span class=\"sr-only\">Loading...</span>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"assistive-technology\"\n    }}>{`Assistive Technology`}</h3>\n    <p>{`For accessibility purposes, each loader here includes `}<inlineCode parentName=\"p\">{`role=\"status\"`}</inlineCode>{` and a nested `}<inlineCode parentName=\"p\">{`<span class=\"sr-only\">Loading...</span>`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}