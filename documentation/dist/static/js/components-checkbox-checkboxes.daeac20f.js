(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./components/Checkbox/checkboxes.mdx":function(e,c,n){"use strict";n.r(c),n.d(c,"default",function(){return i});var o=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),t={},l="wrapper";function i(e){var c=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)(l,Object.assign({},t,n,{components:c,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"checkboxes"},"Checkboxes"),Object(a.b)("p",null,"Default checkboxes and radios are improved upon with the help of ",Object(a.b)("inlineCode",{parentName:"p"},".form-check"),", a single class for both input types that improves the layout and behavior of their HTML elements. Checkboxes are for selecting one or several options in a list, while radios are for selecting one option from many."),Object(a.b)("p",null,"Checkboxes and radios use are built to support HTML-based form validation and provide concise, accessible labels. As such, our ",Object(a.b)("inlineCode",{parentName:"p"},"<input>"),"s and ",Object(a.b)("inlineCode",{parentName:"p"},"<label>"),"s are sibling elements as opposed to an ",Object(a.b)("inlineCode",{parentName:"p"},"<input>")," within a ",Object(a.b)("inlineCode",{parentName:"p"},"<label>"),". This is slightly more verbose as you must specify id and for attributes to relate the ",Object(a.b)("inlineCode",{parentName:"p"},"<input>")," and ",Object(a.b)("inlineCode",{parentName:"p"},"<label>"),"."),Object(a.b)("h3",{id:"examples-of-documentation---checkboxes"},"Examples oF Documentation - Checkboxes"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div class="form-check">\n    <input class="form-check-input" type="checkbox" name="exampleCustomCheckbox" id="customCheckbox1" value="option1" checked>\n    <label class="form-check-label" for="customCheckbox1">\n        Default checkbox\n    </label>\n</div>\n<div class="form-check">\n    <input class="form-check-input" type="checkbox" name="exampleCustomCheckbox" id="customCheckbox2" value="option2">\n    <label class="form-check-label" for="customCheckbox2">\n        Second default checkbox\n</label>\n</div>\n')),Object(a.b)("h2",{id:"disabled-checkboxes"},"Disabled Checkboxes"),Object(a.b)("p",null,"Disabled checkboxes and radios are supported. The disabled attribute will apply a lighter color to help indicate the input\u2019s state."),Object(a.b)("h3",{id:"examples-of-documentation---disabled-checkboxes"},"Examples oF Documentation - Disabled Checkboxes"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div class="form-check">\n    <input class="form-check-input" type="checkbox" name="exampleCustomCheckbox1" id="customCheckbox3" value="option3" disabled>\n    <label class="form-check-label" for="customCheckbox3">\n        Disabled checkbox\n    </label>\n</div>\n')),Object(a.b)("h3",{id:"default-stacked"},"Default (stacked)"),Object(a.b)("p",null,"By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with ",Object(a.b)("inlineCode",{parentName:"p"},".form-check"),"."),Object(a.b)("h3",{id:"examples-of-documentation---default-stacked"},"Examples oF Documentation - Default (stacked)"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div class="form-check">\n    <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">\n    <label class="form-check-label" for="defaultCheck1">\n        Default checkbox\n    </label>\n</div>\n<div class="form-check">\n    <input class="form-check-input" type="checkbox" value="" id="defaultCheck2" disabled>\n    <label class="form-check-label" for="defaultCheck2">\n        Disabled checkbox\n    </label>\n</div>\n')),Object(a.b)("h3",{id:"inline"},"Inline"),Object(a.b)("p",null,"Group checkboxes or radios on the same horizontal row by adding ",Object(a.b)("inlineCode",{parentName:"p"},".form-check-inline")," to any ",Object(a.b)("inlineCode",{parentName:"p"},".form-check"),"."),Object(a.b)("h3",{id:"examples-of-documentation---inline"},"Examples oF Documentation - Inline"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div class="form-check form-check-inline">\n    <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1">\n    <label class="form-check-label" for="inlineCheckbox1">1</label>\n</div>\n<div class="form-check form-check-inline">\n    <input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="option2">\n    <label class="form-check-label" for="inlineCheckbox2">2</label>\n</div>\n<div class="form-check form-check-inline">\n    <input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="option3" disabled>\n    <label class="form-check-label" for="inlineCheckbox3">3 (disabled)</label>\n</div>\n')),Object(a.b)("h3",{id:"without-labels"},"Without labels"),Object(a.b)("p",null,"Add ",Object(a.b)("inlineCode",{parentName:"p"},".position-static")," to inputs within ",Object(a.b)("inlineCode",{parentName:"p"},".form-check")," that don\u2019t have any label text. Remember to still provide some form of label for assistive technologies (for instance, using ",Object(a.b)("inlineCode",{parentName:"p"},"aria-label"),")."),Object(a.b)("h3",{id:"examples-of-documentation---radio-without-labels"},"Examples oF Documentation - Radio without Labels"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div class="form-check">\n    <input class="form-check-input position-static" type="checkbox" id="blankCheckbox" value="option1" aria-label="...">\n</div>\n')))}i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"components/Checkbox/checkboxes.mdx"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=components-checkbox-checkboxes.54fc6a167dfe2e3d16e3.js.map