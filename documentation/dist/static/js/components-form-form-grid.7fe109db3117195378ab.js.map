{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/components/Form/form-grid.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_caibr002_Desktop_staples_ds_1_documentation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","isMDXComponent"],"mappings":"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","file":"static/js/components-form-form-grid.bc2e8480.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"form-grid\"\n    }}>{`Form Grid`}</h1>\n    <p>{`More complex forms can be built using our grid classes. Use these for form layouts that require multiple columns, varied widths, and additional alignment options.`}</p>\n    <p>{`Here is an example of two individual `}<inlineCode parentName=\"p\">{`\"column\"`}</inlineCode>{` fields in a row:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"row\">\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"First name\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Last name\">\n        </div>\n    </div>\n</form>\n`}</code></pre>\n    <br />\n### Form Row\n    <p>{`You may also swap `}<inlineCode parentName=\"p\">{`.row`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`.form-row`}</inlineCode>{`, a variation of our standard grid row that overrides the default column gutters for tighter and more compact layouts.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-row\">\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"First name\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Last name\">\n        </div>\n    </div>\n</form>\n`}</code></pre>\n    <p>{`More complex layouts can also be created with the grid system.\nHere is one example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputEmail4\">Email</label>\n            <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" placeholder=\"with a placeholder\">\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputPassword4\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" placeholder=\"password placeholder\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"inputAddress\">Address</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"inputAddress2\">Address 2</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\">\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputCity\">City</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputCity\">\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label for=\"inputState\">State</label>\n            <select id=\"inputState\" class=\"form-control\">\n                <option selected>Choose...</option>\n                <option>...</option>\n            </select>\n        </div>\n        <div class=\"form-group col-md-2\">\n            <label for=\"inputPostalCode\">Postal Code</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputPostalCode\">\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary float-right\">SUBMIT</button>\n</form>\n`}</code></pre>\n    <br />\n### Horizontal Form\n    <p>{`Create horizontal forms with the grid by adding the `}<inlineCode parentName=\"p\">{`.row`}</inlineCode>{` class to form groups and using the `}<inlineCode parentName=\"p\">{`.col-*-*`}</inlineCode>{` classes to specify the width of your labels and controls. Be sure to add `}<inlineCode parentName=\"p\">{`.col-form-label`}</inlineCode>{` to your `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{` as well so they’re vertically centered with their associated form controls.`}</p>\n    <p>{`At times, you may need to use margin or padding utilities to create that perfect alignment. For example, we’ve removed the `}<inlineCode parentName=\"p\">{`padding-top`}</inlineCode>{` on our stacked radio inputs label to better align the text baseline.`}</p>\n    <p>{`Here is an example of a somehwat more complex horizontal form with input fields, checkboxes and radio buttons:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group row\">\n        <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email</label>\n        <div class=\"col-sm-10\">\n            <input type=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Password</label>\n        <div class=\"col-sm-10\">\n            <input type=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\">\n        </div>\n    </div>\n    <fieldset class=\"form-group\">\n        <div class=\"row\">\n            <legend class=\"col-form-label col-sm-2 pt-0\">Radios</legend>\n            <div class=\"col-sm-10\">\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios1\" value=\"option1\" checked>\n                    <label class=\"form-check-label\" for=\"gridRadios1\"> First radio</label>\n            </div>\n            <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios2\" value=\"option2\">\n                <label class=\"form-check-label\" for=\"gridRadios2\"> Second radio</label>\n            </div>\n            <div class=\"form-check disabled\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios3\" value=\"option3\" disabled>\n                <label class=\"form-check-label\" for=\"gridRadios3\">Third disabled radio</label>\n            </div>\n        </div>\n    </div>\n    </fieldset>\n        <div class=\"form-group row\">\n            <div class=\"col-sm-2\">Checkbox</div>\n            <div class=\"col-sm-10\">\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\">\n                    <label class=\"form-check-label\" for=\"gridCheck1\">Example checkbox</label>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <div class=\"col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-primary\">Sign in</button>\n            </div>\n        </div>\n</form>\n`}</code></pre>\n    <br />\n### Horizontal Form Label Sizing\n    <p>{`Be sure to use the corresponding `}<inlineCode parentName=\"p\">{`.col-form-label-sm`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.col-form-label-lg`}</inlineCode>{` with your `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<legend>`}</inlineCode>{` so that it is correctly sized to `}<inlineCode parentName=\"p\">{`.form-control-lg`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.form-control-sm`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group row\">\n        <label for=\"colFormLabelSm\" class=\"col-sm-2 col-form-label col-form-label-sm\">Email</label>\n        <div class=\"col-sm-10\">\n            <input type=\"email\" class=\"form-control form-control-sm\" id=\"colFormLabelSm\" placeholder=\"col-form-label-sm\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Email</label>\n        <div class=\"col-sm-10\">\n            <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" placeholder=\"col-form-label\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label for=\"colFormLabelLg\" class=\"col-sm-2 col-form-label col-form-label-lg\">Email</label>\n        <div class=\"col-sm-10\">\n            <input type=\"email\" class=\"form-control form-control-lg\" id=\"colFormLabelLg\" placeholder=\"col-form-label-lg\">\n        </div>\n    </div>\n</form>\n`}</code></pre>\n    <br />\n### Column Sizing\n    <p>{`As shown in the previous examples, our grid system allows you to place any number of `}<inlineCode parentName=\"p\">{`.cols`}</inlineCode>{` within a `}<inlineCode parentName=\"p\">{`.row`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.form-row`}</inlineCode>{`. They will split the available width equally between them. You may also pick a subset of your columns to take up more or less space, while the remaining `}<inlineCode parentName=\"p\">{`.cols`}</inlineCode>{`equally split the rest, with specific column classes like `}<inlineCode parentName=\"p\">{`.col-7`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-row\">\n        <div class=\"col-7\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"City\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"State\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Zip\">\n        </div>\n    </div>\n</form>\n`}</code></pre>\n    <br />\n### Auto-sizing\nThe example below uses a flexbox utility to vertically center the contents and changes `.col` to `.col-auto` so that your columns only take up as much space as needed. In other words, the column sizes itself according to the content.\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-row align-items-center\">\n        <div class=\"col-auto\">\n            <label class=\"sr-only\" for=\"inlineFormInput\">Name</label>\n            <input type=\"text\" class=\"form-control mb-2\" id=\"inlineFormInput\" placeholder=\"Jane Doe\">\n        </div>\n        <div class=\"col-auto\">\n            <label class=\"sr-only\" for=\"inlineFormInputGroup\">Username</label>\n            <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                    <div class=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" class=\"form-control\" id=\"inlineFormInputGroup\" placeholder=\"Username\">\n            </div>\n        </div>\n        <div class=\"col-auto\">\n            <div class=\"form-check mb-2\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck\">\n                <label class=\"form-check-label\" for=\"autoSizingCheck\">Remember me</label>\n            </div>\n        </div>\n        <div class=\"col-auto\">\n            <button type=\"submit\" class=\"btn btn-primary mb-2\">Submit</button>\n        </div>\n    </div>\n</form>\n`}</code></pre>\n    <p>{`You can then remix that once again with size-specific column classes.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}