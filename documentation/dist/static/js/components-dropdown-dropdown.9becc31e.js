(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"./components/Dropdown/dropdown.mdx":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return b});var d=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),t=(o("./node_modules/react/index.js"),o("./node_modules/@mdx-js/react/dist/index.es.js")),l=o("./node_modules/docz/dist/index.esm.js"),r=o("./node_modules/reactstrap/es/UncontrolledDropdown.js"),a=o("./node_modules/reactstrap/es/DropdownToggle.js"),s=o("./node_modules/reactstrap/es/DropdownMenu.js"),i=o("./node_modules/reactstrap/es/DropdownItem.js"),p={},c="wrapper";function b(e){var n=e.components,o=Object(d.a)(e,["components"]);return Object(t.b)(c,Object.assign({},p,o,{components:n,mdxType:"MDXLayout"}),Object(t.b)("h1",{id:"dropdown-menu"},"Dropdown Menu"),Object(t.b)("p",null,"Dropdowns present a list of options that can be used to filter existing content. They can also be used for nested menu items or in responsive views for components such as tabs. For multi-level dropdowns, it is recommended to limit options to 1-2 additional levels as it can get confusing for the user."),Object(t.b)(l.c,{__position:0,__code:"<UncontrolledDropdown>\n  <DropdownToggle caret>Dropdown</DropdownToggle>\n  <DropdownMenu>\n    <DropdownItem header>Header</DropdownItem>\n    <DropdownItem disabled>Action</DropdownItem>\n    <DropdownItem>Another Action</DropdownItem>\n    <DropdownItem divider />\n    <DropdownItem>Another Action</DropdownItem>\n  </DropdownMenu>\n</UncontrolledDropdown>",__scope:{props:this?this.props:o,Playground:l.c,Props:l.d,UncontrolledDropdown:r.a,DropdownToggle:a.a,DropdownMenu:s.a,DropdownItem:i.a},mdxType:"Playground"},Object(t.b)(r.a,{mdxType:"UncontrolledDropdown"},Object(t.b)(a.a,{caret:!0,mdxType:"DropdownToggle"},"Dropdown"),Object(t.b)(s.a,{mdxType:"DropdownMenu"},Object(t.b)(i.a,{header:!0,mdxType:"DropdownItem"},"Header"),Object(t.b)(i.a,{disabled:!0,mdxType:"DropdownItem"},"Action"),Object(t.b)(i.a,{mdxType:"DropdownItem"},"Another Action"),Object(t.b)(i.a,{divider:!0,mdxType:"DropdownItem"}),Object(t.b)(i.a,{mdxType:"DropdownItem"},"Another Action")))),Object(t.b)("h2",{id:"multi-level-dropdown-menu"},"Multi-Level Dropdown Menu"),Object(t.b)("p",null,"In this dropdown menu, we have multi-leveled dropdowns which allows users to have the option to select certain things based on a subject/category."),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{}),'<div class="container">\n    <div class="row">\n        <h2>Multi-level Dropdown Menu</h2>\n        <hr>\n        <div class="dropdown">\n            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            Dropdown\n            </button>\n            <ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">\n                <li class="dropdown-item"><a href="#">First Level</a></li>\n                <li class="dropdown-item"><a href="#">First Level</a></li>\n                <li class="dropdown-submenu">\n                <a  class="dropdown-item" tabindex="-1" href="#">First Level</a>\n                <ul class="dropdown-menu">\n                    <li class="dropdown-item">\n                        <a tabindex="-1" href="#">Second level</a></li>\n                    <li class="dropdown-submenu">\n                    <a class="dropdown-item" href="#">Second Level</a>\n                    <ul class="dropdown-menu">\n                        <li class="dropdown-item"><a href="#">Third level</a></li>\n                        <li class="dropdown-item"><a href="#">Third level</a></li>\n                    </ul>\n                    </li>\n                    <li class="dropdown-item"><a href="#">Second level</a></li>\n                    <li class="dropdown-item"><a href="#">Second level</a></li>\n                </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n')),Object(t.b)("h3",{id:"navbar-with-multi-level-dropdown-menu"},"Navbar with Multi-Level Dropdown Menu"),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{}),'<ul class="nav nav-tabs">\n<li class="nav-item">\n    <a class="nav-link active" href="#">Active</a>\n</li>\n<li class="nav-item dropdown">\n    <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Dropdown</a>\n    <div class="dropdown-menu">\n    <a class="dropdown-item" href="#">Action</a>\n    <a class="dropdown-item" href="#">Another action</a>\n    <a class="dropdown-item" href="#">Something else here</a>\n    <div class="dropdown-divider"></div>\n    <a class="dropdown-item" href="#">Separated link</a>\n    </div>\n</li>\n<li class="nav-item">\n    <a class="nav-link" href="#">Link</a>\n</li>\n<li class="nav-item">\n    <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>\n</li>\n</ul>\n')),Object(t.b)("p",null,"We also can do dropdowns in forms."),Object(t.b)("h3",{id:"menu-forms"},"Menu Forms"),Object(t.b)("p",null,"Put a form within a dropdown menu, or make it into a dropdown menu, and use ",Object(t.b)("inlineCode",{parentName:"p"},"margin or padding utilities")," to give it the negative space you require."),Object(t.b)("h3",{id:"simple-dropdown-menu-form"},"Simple Dropdown Menu Form"),Object(t.b)("pre",null,Object(t.b)("code",Object.assign({parentName:"pre"},{}),'<div class="dropdown-menu">\n<form class="px-4 py-3">\n    <div class="form-group">\n    <label for="exampleDropdownFormEmail1">Email address</label>\n    <input type="email" class="form-control" id="exampleDropdownFormEmail1" placeholder="email@example.com">\n    </div>\n    <div class="form-group">\n    <label for="exampleDropdownFormPassword1">Password</label>\n    <input type="password" class="form-control" id="exampleDropdownFormPassword1" placeholder="Password">\n    </div>\n    <div class="form-check">\n    <input type="checkbox" class="form-check-input" id="dropdownCheck">\n    <label class="form-check-label" for="dropdownCheck">\n        Remember me\n    </label>\n    </div>\n    <button type="submit" class="btn btn-primary">Sign in</button>\n</form>\n<div class="dropdown-divider"></div>\n<a class="dropdown-item" href="#">New around here? Sign up</a>\n<a class="dropdown-item" href="#">Forgot password?</a>\n</div>\n')),Object(t.b)("p",null,"You can also change the directions of the dropdowns to become droplefts. droprights or dropups."),Object(t.b)("table",null,Object(t.b)("thead",null,Object(t.b)("th",null,"Class"),Object(t.b)("th",null,"Direction")),Object(t.b)("tbody",null,Object(t.b)("tr",null,Object(t.b)("td",null,Object(t.b)("code",null,".dropdown")),Object(t.b)("td",null,"Down")),Object(t.b)("tr",null,Object(t.b)("td",null,Object(t.b)("code",null,".dropright")),Object(t.b)("td",null,"Right")),Object(t.b)("tr",null,Object(t.b)("td",null,Object(t.b)("code",null,".dropleft")),Object(t.b)("td",null,"Left")),Object(t.b)("tr",null,Object(t.b)("td",null,Object(t.b)("code",null,".dropup")),Object(t.b)("td",null,"Up")))))}b&&b===Object(b)&&Object.isExtensible(b)&&Object.defineProperty(b,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"components/Dropdown/dropdown.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=components-dropdown-dropdown.afda1694a9a92002a462.js.map