{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/components/Badge/badges.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_caibr002_Desktop_staples_ds_1_documentation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Props","Badge","Button","reactstrap__WEBPACK_IMPORTED_MODULE_4__","color","reactstrap__WEBPACK_IMPORTED_MODULE_5__","outline","className","pill","isMDXComponent"],"mappings":"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","file":"static/js/components-badge-badges.062f790e.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport { Badge, Button } from \"reactstrap\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"badges\"\n    }}>{`Badges`}</h1>\n    <p>{`Badges scale to match the size of the immediate parent element by using relative font sizing and `}<inlineCode parentName=\"p\">{`em`}</inlineCode>{` units.\nBadges can be used as part of links or buttons to provide a counter.`}</p>\n    <h2 {...{\n      \"id\": \"scale-to-parent\"\n    }}>{`Scale to Parent`}</h2>\n    <Playground __position={0} __code={'<h1>\\n  Heading <Badge color=\\\"secondary\\\">New</Badge>\\n</h1>\\n<h2>\\n  Heading <Badge color=\\\"secondary\\\">New</Badge>\\n</h2>\\n<h3>\\n  Heading <Badge color=\\\"secondary\\\">New</Badge>\\n</h3>\\n<h4>\\n  Heading <Badge color=\\\"secondary\\\">New</Badge>\\n</h4>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Badge,\n      Button\n    }} mdxType=\"Playground\">\n\t<h1>\n\t\tHeading <Badge color=\"secondary\" mdxType=\"Badge\">New</Badge>\n\t</h1>\n\t<h2>\n\t\tHeading <Badge color=\"secondary\" mdxType=\"Badge\">New</Badge>\n\t</h2>\n\t<h3>\n\t\tHeading <Badge color=\"secondary\" mdxType=\"Badge\">New</Badge>\n\t</h3>\n\t<h4>\n\t\tHeading <Badge color=\"secondary\" mdxType=\"Badge\">New</Badge>\n\t</h4>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<h1>Example heading <span class=\"badge badge-secondary\">New</span></h1>\n<h2>Example heading <span class=\"badge badge-secondary\">New</span></h2>\n<h3>Example heading <span class=\"badge badge-secondary\">New</span></h3>\n<h4>Example heading <span class=\"badge badge-secondary\">New</span></h4>\n<h5>Example heading <span class=\"badge badge-secondary\">New</span></h5>\n<h6>Example heading <span class=\"badge badge-secondary\">New</span></h6>\n`}</code></pre>\n    <p>{`Badges can be used as part of links or buttons to provide a counter.`}</p>\n    <h2 {...{\n      \"id\": \"notification\"\n    }}>{`Notification`}</h2>\n    <Playground __position={1} __code={'<Button color=\\\"primary\\\" outline>\\n  Notifications <Badge color=\\\"primary\\\">4</Badge>\\n</Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Badge,\n      Button\n    }} mdxType=\"Playground\">\n\t<Button color=\"primary\" outline mdxType=\"Button\">\n\t\tNotifications <Badge color=\"primary\" mdxType=\"Badge\">4</Badge>\n\t</Button>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<button type=\"button\" class=\"btn btn-primary\">\n    Profile <span class=\"badge badge-light\">9</span>\n    <span class=\"sr-only\">unread messages</span>\n</button>\n`}</code></pre>\n    <p>{`Note that depending on how they are used, badges may be confusing for users of screen readers and similar assistive technologies. While the styling of badges provides a visual cue as to their purpose, these users will simply be presented with the content of the badge. Depending on the specific situation, these badges may seem like random additional words or numbers at the end of a sentence, link, or button.`}</p>\n    <p>{`Unless the context is clear (as with the “Notifications” example, where it is understood that the `}<inlineCode parentName=\"p\">{`“4”`}</inlineCode>{` is the number of notifications), consider including additional context with a visually hidden piece of additional text.`}</p>\n    <h2 {...{\n      \"id\": \"contextual-variations\"\n    }}>{`Contextual variations`}</h2>\n    <p>{`Add any of the modifier classes to change the appearance of a badge.`}</p>\n    <p>{`Conveying meaning to assistive technologies\nUsing color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies – such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (e.g. the visible text), or is included through alternative means, such as additional text hidden with the `}<inlineCode parentName=\"p\">{`.sr-only`}</inlineCode>{` class.`}</p>\n    <h3 {...{\n      \"id\": \"pill-badges\"\n    }}>{`Pill badges`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`.badge-pill`}</inlineCode>{` modifier class to make badges more rounded (with a larger `}<inlineCode parentName=\"p\">{`border-radius`}</inlineCode>{` and additional horizontal `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{`).`}</p>\n    <Playground __position={2} __code={'<Badge color=\\\"primary\\\" className=\\\"mr-2\\\" pill>\\n  Primary\\n</Badge>\\n<Badge color=\\\"secondary\\\" className=\\\"mr-2\\\" pill>\\n  Secondary\\n</Badge>\\n<Badge color=\\\"success\\\" className=\\\"mr-2\\\" pill>\\n  Success\\n</Badge>\\n<Badge color=\\\"danger\\\" className=\\\"mr-2\\\" pill>\\n  Danger\\n</Badge>\\n<Badge color=\\\"warning\\\" className=\\\"mr-2\\\" pill>\\n  Warning\\n</Badge>\\n<Badge color=\\\"info\\\" className=\\\"mr-2\\\" pill>\\n  Info\\n</Badge>\\n<Badge color=\\\"light\\\" className=\\\"mr-2\\\" pill>\\n  Light\\n</Badge>\\n<Badge color=\\\"dark\\\" className=\\\"mr-2\\\" pill>\\n  Dark\\n</Badge>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Badge,\n      Button\n    }} mdxType=\"Playground\">\n\t<Badge color=\"primary\" className=\"mr-2\" pill mdxType=\"Badge\">Primary</Badge>\n\t<Badge color=\"secondary\" className=\"mr-2\" pill mdxType=\"Badge\">Secondary</Badge>\n\t<Badge color=\"success\" className=\"mr-2\" pill mdxType=\"Badge\">Success</Badge>\n\t<Badge color=\"danger\" className=\"mr-2\" pill mdxType=\"Badge\">Danger</Badge>\n\t<Badge color=\"warning\" className=\"mr-2\" pill mdxType=\"Badge\">Warning</Badge>\n\t<Badge color=\"info\" className=\"mr-2\" pill mdxType=\"Badge\">Info</Badge>\n\t<Badge color=\"light\" className=\"mr-2\" pill mdxType=\"Badge\">Light</Badge>\n\t<Badge color=\"dark\" className=\"mr-2\" pill mdxType=\"Badge\">Dark</Badge>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<span class=\"badge badge-primary badge-pill\">Primary</span>\n<span class=\"badge badge-secondary badge-pill\">Secondary</span>\n<span class=\"badge badge-success badge-pill\">Success</span>\n<span class=\"badge badge-danger badge-pill\">Danger</span>\n<span class=\"badge badge-warning badge-pill\">Warning</span>\n<span class=\"badge badge-info badge-pill\">Info</span>\n<span class=\"badge badge-light badge-pill\">Light</span>\n<span class=\"badge badge-dark badge-pill\">Dark</span>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}