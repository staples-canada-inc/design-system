{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/components/Text-Input/text_inputs.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_caibr002_Desktop_staples_ds_1_documentation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","isMDXComponent"],"mappings":"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","file":"static/js/components-text-input-text-inputs.b18182bd.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"forms\"\n    }}>{`Forms`}</h1>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Bootstrap's form controls expand on `}{`[our Rebooted form styles]`}{`({{< docsref \"/content/reboot#forms\" >}}) with classes. Use these classes to opt into their customized displays for a more consistent rendering across browsers and devices.`}</p>\n    <p>{`Be sure to use an appropriate `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` attribute on all inputs (e.g., `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{` for email address or `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{` for numerical information) to take advantage of newer input controls like email verification, number selection, and more.`}</p>\n    <p>{`Here's a quick example to demonstrate Bootstrap's form styles. {{Keep reading for documentation on required classes, form layout, and more.}}`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-static-text-box\"\n    }}>{`Text Input for Static Text Box`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <label for=\"exampleStaticInput\">Plain Text (Static)</label>\n        <input id=\"exampleStaticInput\" plaintext value=\"Some plain text/ static value\" readonly=\"readonly\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-email\"\n    }}>{`Text Input for email`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <label for=\"exampleEmail\">Email</label>\n        <input type=\"email\" class=\"form-control\" id=\"exampleEmail\" name=\"email\" placeholder=\"with a placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-password\"\n    }}>{`Text Input for Password`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <label for=\"examplePassword\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-urls\"\n    }}>{`Text Input for URLs`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n\n    <div class=\"form-group\">\n        <label for=\"exampleUrl\">URL</label>\n        <input type=\"url\" class=\"form-control\" name=\"url\" id=\"exampleUrl\" placeholder=\"url placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"form-controls\"\n    }}>{`Form controls`}</h2>\n    <p>{`Textual form controls—like `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{`s, `}<inlineCode parentName=\"p\">{`<select>`}</inlineCode>{`s, and `}<inlineCode parentName=\"p\">{`<textarea>`}</inlineCode>{`s—are styled with the `}<inlineCode parentName=\"p\">{`.form-control`}</inlineCode>{` class. Included are styles for general appearance, focus state, sizing, and more.`}</p>\n    <p>{`Be sure to explore our `}<a parentName=\"p\" {...{\n        \"href\": \"#custom-forms\"\n      }}>{`custom forms`}</a>{` to further style `}<inlineCode parentName=\"p\">{`<select>`}</inlineCode>{`s.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-numbers\"\n    }}>{`Text Input for Numbers`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleNumber\"> Number </Label>\n        <input type=\"number\" class=\"form-control\" name=\"number\" id=\"exampleNumber\" placeholder=\"number placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-datetime\"\n    }}>{`Text Input for Datetime`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleDatetime\"> Datetime </Label>\n        <input type=\"datetime\" class=\"form-control\" name=\"datetime\" id=\"exampleDatetime\" placeholder=\"datetime placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-date\"\n    }}>{`Text Input for Date`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleDate\">Date</Label>\n        <input type=\"date\" class=\"form-control\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-time\"\n    }}>{`Text Input for Time`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleTime\">Time</Label>\n        <Input type=\"time\" class=\"form-control\" name=\"time\" id=\"exampleTime\" placeholder=\"time placeholder\">\n    </div>\n<form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-colour\"\n    }}>{`Text Input for Colour`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleColor\">Color</Label>\n        <input type=\"color\" class=\"form-control\" name=\"color\" id=\"exampleColor\" placeholder=\"color placeholder\">\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-search\"\n    }}>{`Text Input for Search`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleSearch\">Search</Label>\n        <input type=\"search\" name=\"search\" id=\"exampleSearch\" placeholder=\"search placeholder\" required>\n    </div>\n</form>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"select-menu\"\n    }}>{`Select menu`}</h2>\n    <p>{`Custom `}<inlineCode parentName=\"p\">{`<select>`}</inlineCode>{` menus need only a custom class, `}<inlineCode parentName=\"p\">{`.custom-select`}</inlineCode>{` to trigger the custom styles. Custom styles are limited to the `}<inlineCode parentName=\"p\">{`<select>’`}</inlineCode>{`s initial appearance and cannot modify the `}<inlineCode parentName=\"p\">{`<option>`}</inlineCode>{`s due to browser limitations.`}</p>\n    <p>{`You may also choose from small and large custom selects to match our similarly sized text inputs.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-select-menu\"\n    }}>{`Text Input for Select Menu`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <label for=\"exampleSelect\">Select</label>\n        <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n        </select>\n    </div>\n</form>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"select-multiple\"\n    }}>{`Select Multiple`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`multiple`}</inlineCode>{` attribute is also supported. As is the size attribute along with multiple.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-multiple-select-menu\"\n    }}>{`Text Input for Multiple Select Menu`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n    <div class=\"form-group\">\n        <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n        <select multiple class=\"form-control\" id=\"exampleFormControlSelect2\">\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n        </select>\n    </div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"text-input-for-text-area\"\n    }}>{`Text Input for Text Area`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-group\">\n    <label for=\"exampleFormControlTextarea1\">Label</label>\n    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Value\"></textarea>\n</div>\n`}</code></pre>\n    <p>{`For file inputs, swap the `}<inlineCode parentName=\"p\">{`.form-control`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`.form-control-file`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-for-file-input\"\n    }}>{`Text Input for File Input`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<form>\n<div class=\"form-group\">\n    <label for=\"exampleFormControlFile1\">Example file input</label>\n    <input type=\"file\" class=\"form-control-file\" id=\"exampleFormControlFile1\">\n</div>\n</form>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"validation\"\n    }}>{`Validation`}</h3>\n    <p>{`Provide valuable, actionable feedback to your users with HTML5 form validation–available in all our supported browsers. Choose from the browser default validation feedback, or implement custom messages with our built-in classes and starter JavaScript.`}</p>\n    <p>{`We currently recommend using custom validation styles, as native browser default validation messages are not consistently exposed to assistive technologies in all browsers (most notably, Chrome on desktop and mobile).`}</p>\n    <h3 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How it works`}</h3>\n    <p>{`Here’s how form validation works with Bootstrap:`}</p>\n    <p>{`HTML form validation is applied via CSS’s two pseudo-classes, :invalid and :valid. It applies to `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<select>`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`<textarea>`}</inlineCode>{` elements. Bootstrap scopes the `}<inlineCode parentName=\"p\">{`:invalid`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`:valid`}</inlineCode>{` styles to parent `}<inlineCode parentName=\"p\">{`.was-validated`}</inlineCode>{` class, usually applied to the `}<inlineCode parentName=\"p\">{`<form>`}</inlineCode>{`. Otherwise, any required field without a value shows up as invalid on page load. This way, you may choose when to activate them (typically after form submission is attempted). To reset the appearance of the form (for instance, in the case of dynamic form submissions using AJAX), remove the .was-validated class from the `}<inlineCode parentName=\"p\">{`<form>`}</inlineCode>{` again after submission. As a fallback, `}<inlineCode parentName=\"p\">{`.is-invalid`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.is-valid`}</inlineCode>{` classes may be used instead of the pseudo-classes for server side validation. They do not require a .was-validated parent class.`}</p>\n    <p>{`Due to constraints in how CSS works, we cannot (at present) apply styles to a `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{` that comes before a form control in the DOM without the help of custom JavaScript. All modern browsers support the constraint validation API, a series of JavaScript methods for validating form controls. Feedback messages may utilize the browser defaults (different for each browser, and unstylable via CSS) or our custom feedback styles with additional HTML and CSS. You may provide custom validity messages with setCustomValidity in JavaScript. With that in mind, consider the following demos for our custom form validation styles, optional server side classes, and browser defaults.`}</p>\n    <h3 {...{\n      \"id\": \"server-side\"\n    }}>{`Server side`}</h3>\n    <p>{`We recommend using client-side validation, but in case you require server-side validation, you can indicate invalid and valid form fields with `}<inlineCode parentName=\"p\">{`.is-invalid`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.is-valid.`}</inlineCode>{` Note that `}<inlineCode parentName=\"p\">{`.invalid-feedback`}</inlineCode>{` is also supported with these classes.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}