{"version":3,"sources":["/Users/caibr002/Desktop/staples_ds_1/documentation/components/Checkbox/checkboxes.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_caibr002_Desktop_staples_ds_1_documentation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Props","Label","Input","CustomInput","Form","FormGroup","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","type","label","disabled","check","inline","isMDXComponent"],"mappings":"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","file":"static/js/components-checkbox-checkboxes.4049c8d8.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport { Label, Input, CustomInput, Form, FormGroup } from \"reactstrap\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Default checkboxes improved with the help of `}<inlineCode parentName=\"p\">{`.form-check`}</inlineCode>{`, a single class that improves the layout and behavior of their HTML elements. Checkboxes are for selecting one or several options in a list, while radios are for selecting one option from many.`}</p>\n    <p>{`Checkboxes are built to support HTML-based form validation and provide concise, accessible labels. As such, our `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{` are sibling elements as opposed to an `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{` within a `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{`. This is slightly more verbose as you must specify id and for attributes to relate the `}<inlineCode parentName=\"p\">{`<input>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{`.`}</p>\n    <Playground __position={0} __code={'<Form>\\n  <FormGroup>\\n    <CustomInput\\n      type=\\\"checkbox\\\"\\n      id=\\\"exampleCustomCheckbox1\\\"\\n      label=\\\"Check this out\\\"\\n    />\\n  </FormGroup>\\n</Form>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Label,\n      Input,\n      CustomInput,\n      Form,\n      FormGroup\n    }} mdxType=\"Playground\">\n\t<Form mdxType=\"Form\">\n\t\t<FormGroup mdxType=\"FormGroup\">\n\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox1\" label=\"Check this out\" mdxType=\"CustomInput\" />\n\t\t</FormGroup>\n\t</Form>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" name=\"exampleCustomCheckbox\" id=\"customCheckbox1\" value=\"option1\" checked>\n    <label class=\"form-check-label\" for=\"customCheckbox1\">\n        Check this out\n    </label>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"disabled-checkbox\"\n    }}>{`Disabled Checkbox`}</h3>\n    <p>{`Disabled checkboxes and radios are supported. The disabled attribute will apply a lighter color to help indicate the inputâ€™s state.`}</p>\n    <Playground __position={1} __code={'<Form>\\n  <FormGroup>\\n    <CustomInput\\n      type=\\\"checkbox\\\"\\n      id=\\\"exampleCustomCheckbox2\\\"\\n      label=\\\"But don\\'t check this\\\"\\n      disabled\\n    />\\n  </FormGroup>\\n</Form>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Label,\n      Input,\n      CustomInput,\n      Form,\n      FormGroup\n    }} mdxType=\"Playground\">\n\t<Form mdxType=\"Form\">\n\t\t<FormGroup mdxType=\"FormGroup\">\n\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox2\" label=\"But don't check this\" disabled mdxType=\"CustomInput\" />\n\t\t</FormGroup>\n\t</Form>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" name=\"exampleCustomCheckbox1\" id=\"customCheckbox3\" value=\"option3\" disabled>\n    <label class=\"form-check-label\" for=\"customCheckbox3\">\n        But don't check this\n    </label>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"default-stacked\"\n    }}>{`Default (Stacked)`}</h3>\n    <p>{`By default, any number of checkboxes and radios that are immediate siblings will be vertically stacked and appropriately spaced with `}<inlineCode parentName=\"p\">{`.form-check`}</inlineCode>{`.`}</p>\n    <Playground __position={2} __code={'<Form>\\n  <FormGroup>\\n    <CustomInput\\n      type=\\\"checkbox\\\"\\n      id=\\\"exampleCustomCheckbox3\\\"\\n      label=\\\"Default checkbox\\\"\\n    />\\n  </FormGroup>\\n  <FormGroup>\\n    <CustomInput\\n      type=\\\"checkbox\\\"\\n      id=\\\"exampleCustomCheckbox4\\\"\\n      label=\\\"Default checkbox\\\"\\n    />\\n  </FormGroup>\\n</Form>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Label,\n      Input,\n      CustomInput,\n      Form,\n      FormGroup\n    }} mdxType=\"Playground\">\n\t<Form mdxType=\"Form\">\n\t\t<FormGroup mdxType=\"FormGroup\">\n\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox3\" label=\"Default checkbox\" mdxType=\"CustomInput\" />\n\t\t</FormGroup>\n\t\t<FormGroup mdxType=\"FormGroup\">\n\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox4\" label=\"Default checkbox\" mdxType=\"CustomInput\" />\n\t\t</FormGroup>\n\t</Form>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\">\n    <label class=\"form-check-label\" for=\"defaultCheck1\">\n        Default checkbox\n    </label>\n</div>\n<div class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck2\">\n    <label class=\"form-check-label\" for=\"defaultCheck2\">\n        Disabled checkbox\n    </label>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"inline\"\n    }}>{`Inline`}</h3>\n    <p>{`Group checkboxes or radios on the same horizontal row by adding `}<inlineCode parentName=\"p\">{`.form-check-inline`}</inlineCode>{` to any `}<inlineCode parentName=\"p\">{`.form-check`}</inlineCode>{`.`}</p>\n    <Playground __position={3} __code={'<Form>\\n  <FormGroup check inline>\\n    <CustomInput\\n      type=\\\"checkbox\\\"\\n      id=\\\"exampleCustomCheckbox5\\\"\\n      label=\\\"Inline checkbox 1\\\"\\n    />\\n  </FormGroup>\\n  <FormGroup check inline>\\n    <CustomInput\\n      type=\\\"checkbox\\\"\\n      id=\\\"exampleCustomCheckbox6\\\"\\n      label=\\\"Inline checkbox 2\\\"\\n    />\\n  </FormGroup>\\n  <FormGroup check inline>\\n    <CustomInput\\n      type=\\\"checkbox\\\"\\n      id=\\\"exampleCustomCheckbox7\\\"\\n      label=\\\"Inline checkbox 3\\\"\\n    />\\n  </FormGroup>\\n</Form>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Label,\n      Input,\n      CustomInput,\n      Form,\n      FormGroup\n    }} mdxType=\"Playground\">\n\t<Form mdxType=\"Form\">\n\t\t<FormGroup check inline mdxType=\"FormGroup\">\n\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox5\" label=\"Inline checkbox 1\" mdxType=\"CustomInput\" />\n\t\t</FormGroup>\n\t\t<FormGroup check inline mdxType=\"FormGroup\">\n\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox6\" label=\"Inline checkbox 2\" mdxType=\"CustomInput\" />\n\t\t</FormGroup>\n\t\t<FormGroup check inline mdxType=\"FormGroup\">\n\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox7\" label=\"Inline checkbox 3\" mdxType=\"CustomInput\" />\n\t\t</FormGroup>\n\t</Form>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\">\n    <label class=\"form-check-label\" for=\"inlineCheckbox1\">Inline checkbox 1</label>\n</div>\n<div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\">\n    <label class=\"form-check-label\" for=\"inlineCheckbox2\">Inline checkbox 2</label>\n</div>\n<div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" value=\"option3\">\n    <label class=\"form-check-label\" for=\"inlineCheckbox3\">Inline checkbox 3</label>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"assistive-technology\"\n    }}>{`Assistive Technology`}</h3>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`.position-static`}</inlineCode>{` to inputs within `}<inlineCode parentName=\"p\">{`.form-check`}</inlineCode>{` that donâ€™t have any label text. Remember to still provide some form of label for assistive technologies (for instance, using `}<inlineCode parentName=\"p\">{`aria-label`}</inlineCode>{`).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<div class=\"form-check\">\n    <input class=\"form-check-input position-static\" type=\"checkbox\" id=\"blankCheckbox\" value=\"option1\" aria-label=\"...\">\n</div>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}