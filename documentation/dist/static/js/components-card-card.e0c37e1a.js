(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./components/Card/card.md":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return s});var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),i=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),d={},c="wrapper";function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)(c,Object.assign({},d,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),'<div class="card" style="width: 330px;">\n    <img class="card-img-top" src="..." alt="Card image cap">\n    <div class="card-body">\n        <h5 class="card-title">Card title</h5>\n        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n        <a href="#" class="card-link">VIEW MORE</a>\n    </div>\n</div>\n')),Object(i.b)("p",null,"You can also use buttons with links within a card using this documentation: "),Object(i.b)("h3",{id:"card-with-button"},Object(i.b)("b",null,"Card with Button")),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),'<div class="card">\n    <div>\n        <a href="#" class="btn btn-primary">VIEW MORE</a> \n    </div>\n</div>\n')),Object(i.b)("p",null,"##Content types\nCards support a wide variety of content, including images, text, list groups, links, and more. Below are examples of what\u2019s supported."),Object(i.b)("h2",{id:"body"},"Body"),Object(i.b)("p",null,"The building block of a card is the ",Object(i.b)("inlineCode",{parentName:"p"},".card-body.")," Use it whenever you need a padded section within a card."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),'<div class="card">\n<div class="card-body">\n    This is some text within a card body.\n</div>\n</div>\n')),Object(i.b)("h2",{id:"titles-text-and-links"},"Titles, Text and Links"),Object(i.b)("p",null,"Card titles are used by adding ",Object(i.b)("inlineCode",{parentName:"p"},".card-title")," to a ",Object(i.b)("inlineCode",{parentName:"p"},"<h*>")," tag. In the same way, links are added and placed next to each other by adding ",Object(i.b)("inlineCode",{parentName:"p"},".card-link")," to an ",Object(i.b)("inlineCode",{parentName:"p"},"<a>")," tag."),Object(i.b)("p",null,"Subtitles are used by adding a ",Object(i.b)("inlineCode",{parentName:"p"},".card-subtitle")," to a ",Object(i.b)("inlineCode",{parentName:"p"},"<h*>")," tag. If the ",Object(i.b)("inlineCode",{parentName:"p"},".card-title")," and the ",Object(i.b)("inlineCode",{parentName:"p"},".card-subtitle")," items are placed in a ",Object(i.b)("inlineCode",{parentName:"p"},".card-body")," item, the card title and subtitle are aligned nicely."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),'<div class="card" style="width: 18rem;">\n    <div class="card-body">\n        <h5 class="card-title">Card title</h5>\n        <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>\n        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n        <a href="#" class="card-link">Card link</a>\n        <a href="#" class="card-link">Another link</a>\n    </div>\n</div>\n')),Object(i.b)("h2",{id:"images"},"Images"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},".card-img-top")," places an image to the top of the card. With ",Object(i.b)("inlineCode",{parentName:"p"},".card-text"),", text can be added to the card. Text within ",Object(i.b)("inlineCode",{parentName:"p"},".card-text")," can also be styled with the standard HTML tags."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),'<div class="card" style="width: 18rem;">\n<img class="card-img-top" src="..." alt="Card image cap">\n    <div class="card-body">\n        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n    </div>\n</div>\n')),Object(i.b)("h2",{id:"list-groups"},"List groups"),Object(i.b)("p",null,"Create lists of content in a card with a flush list group."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),'<div class="card" style="width: 18rem;">\n    <ul class="list-group list-group-flush">\n        <li class="list-group-item">Cras justo odio</li>\n        <li class="list-group-item">Dapibus ac facilisis in</li>\n        <li class="list-group-item">Vestibulum at eros</li>\n    </ul>\n</div>\n')))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"components/Card/card.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=components-card-card.7fe109db3117195378ab.js.map