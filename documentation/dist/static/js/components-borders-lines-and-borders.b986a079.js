(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./components/Borders/lines-&-borders.md":function(e,n,s){"use strict";s.r(n),s.d(n,"default",function(){return l});var r=s("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(s("./node_modules/react/index.js"),s("./node_modules/@mdx-js/react/dist/index.es.js")),t={},o="wrapper";function l(e){var n=e.components,s=Object(r.a)(e,["components"]);return Object(a.b)(o,Object.assign({},t,s,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"lines--borders"},"Lines & Borders"),Object(a.b)("p",null,"All borders, horizontal and vertical dividers are ",Object(a.b)("inlineCode",{parentName:"p"},"light-gray")," with a stroke of 1px. All element outlines have a corner radius value of zero unless noted otherwise."),Object(a.b)("h2",{id:"border"},"Border"),Object(a.b)("p",null,"Use border utilities to add or remove an element's borders. Choose class ",Object(a.b)("inlineCode",{parentName:"p"},".border")," for all borders or specify a specific side as noted below."),Object(a.b)("h3",{id:"example-additive"},"Example: Additive"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div class="bd-example-border-utils">\n    <span class="border"></span>\n    <span class="border-top"></span>\n    <span class="border-right"></span>\n    <span class="border-bottom"></span>\n    <span class="border-left"></span>\n</div>\n')),Object(a.b)("h3",{id:"example-subtractive"},"Example: Subtractive"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div>\n    <span class="border-0"></span>\n    <span class="border-top-0"></span>\n    <span class="border-right-0"></span>\n    <span class="border-bottom-0"></span>\n    <span class="border-left-0"></span>\n</div>\n')),Object(a.b)("h2",{id:"border-colour"},"Border Colour"),Object(a.b)("p",null,"Change the border colour using utilities built on our colour theme."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div>\n    <span class="border border-primary"></span>\n    <span class="border border-secondary"></span>\n    <span class="border border-success"></span>\n    <span class="border border-danger"></span>\n    <span class="border border-warning"></span>\n    <span class="border border-info"></span>\n    <span class="border border-light"></span>\n    <span class="border border-dark"></span>\n    <span class="border border-white"></span>\n</div>\n')),Object(a.b)("h2",{id:"border-radius"},"Border Radius"),Object(a.b)("p",null,"Add classes to an element to easily round its corners."),Object(a.b)("h3",{id:"border-radius-and-shape-characteristics"},"Border Radius and Shape Characteristics"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div>\n    <img src="..." alt="..." class="rounded">\n    <img src="..." alt="..." class="rounded-top">\n    <img src="..." alt="..." class="rounded-right">\n    <img src="..." alt="..." class="rounded-bottom">\n    <img src="..." alt="..." class="rounded-left">\n    <img src="..." alt="..." class="rounded-circle">\n    <img src="..." alt="..." class="rounded-pill">\n    <img src="..." alt="..." class="rounded-0">\n<div>\n')),Object(a.b)("h2",{id:"lines"},"Lines"),Object(a.b)("h3",{id:"vertical-lines"},"Vertical Lines"),Object(a.b)("p",null,"Use line utilities to quickly style lines. This can be done by using border-left or border-right and adjusting its length, and size."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<style>\n.vl {\n  border-left: 1px solid #D9D9D6;\n  height: 500px;\n}\n</style>\n\n<div class="vl"></div>\n')),Object(a.b)("h3",{id:"centered-vertical-line"},"Centered Vertical Line"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<style>\n.vl {\n  border-left: 6px solid #D9D9D6;\n  height: 500px;\n  position: absolute;\n  left: 50%;\n  margin-left: -3px;\n  top: 50vh;\n}\n</style>\n<div class="vl"></div>\n')),Object(a.b)("h3",{id:"horizontal-line"},"Horizontal Line"),Object(a.b)("p",null,"Create horizontal lines by using the ",Object(a.b)("inlineCode",{parentName:"p"},"<hr>")," tag. "),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"<hr>\n")),Object(a.b)("p",null,"You can also customize the ",Object(a.b)("inlineCode",{parentName:"p"},"<hr>")," tag to adjust the line weight as shown below."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<style>\n.hr {\n    display: block;\n    height: 1px;\n    border: 0;\n    border-top: 1px solid #D9D9D6;\n    margin: 1em 0;\n    padding: 0;\n}\n</style>\n<div class="hr"></div>\n')))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"components/Borders/lines-&-borders.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=components-borders-lines-and-borders.7fe109db3117195378ab.js.map