(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"./components/Button/buttons.mdx":function(t,e,o){"use strict";o.r(e),o.d(e,"default",function(){return B});var n=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(o("./node_modules/react/index.js"),o("./node_modules/@mdx-js/react/dist/index.es.js")),r=o("./node_modules/docz/dist/index.esm.js"),s=o("./node_modules/reactstrap/es/Button.js"),b=o("./node_modules/reactstrap/es/ButtonDropdown.js"),l=o("./node_modules/reactstrap/es/DropdownToggle.js"),c=o("./node_modules/reactstrap/es/DropdownMenu.js"),i=o("./node_modules/reactstrap/es/DropdownItem.js"),u=o("./node_modules/reactstrap/es/ButtonGroup.js"),d=o("./node_modules/reactstrap/es/ButtonToolbar.js"),p=o("./node_modules/reactstrap/es/UncontrolledButtonDropdown.js"),m={},y="wrapper";function B(t){var e=t.components,o=Object(n.a)(t,["components"]);return Object(a.b)(y,Object.assign({},m,o,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"buttons"},"Buttons"),Object(a.b)("h2",{id:"button-tags"},"Button Tags"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},".btn")," classes are designed to be used with the ",Object(a.b)("inlineCode",{parentName:"p"},"<button>")," element. However, you can also use these classes on ",Object(a.b)("inlineCode",{parentName:"p"},"<a>")," or ",Object(a.b)("inlineCode",{parentName:"p"},"<input>")," elements (though some browsers may apply a slightly different rendering)."),Object(a.b)("h3",{id:"buttons-1"},"Buttons"),Object(a.b)(r.c,{__position:0,__code:'<Button color="primary" className="mr-2">\n  Primary\n</Button>\n<Button color="secondary" className="mr-2">\n  Secondary\n</Button>\n<Button color="tertiary" className="mr-2">\n  Tertiary\n</Button>',__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(s.a,{color:"primary",className:"mr-2",mdxType:"Button"},"Primary"),Object(a.b)(s.a,{color:"secondary",className:"mr-2",mdxType:"Button"},"Secondary"),Object(a.b)(s.a,{color:"tertiary",className:"mr-2",mdxType:"Button"},"Tertiary")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'\x3c!-- Used with <button> element --\x3e\n<button type="button" class="btn btn-primary">PRIMARY</button>\n<button type="button" class="btn btn-secondary">SECONDARY</button>\n<button type="button" class="btn btn-tertiary">TERTIARY</button>\n\n\x3c!-- Used with <a> element --\x3e\n<a class="btn btn-primary" href="#" role="button">PRIMARY</a>\n<a class="btn btn-secondary" href="#" role="button">SECONDARY</a>\n<a class="btn btn-tertiary" href="#" role="button">TERTIARY</a>\n\n\x3c!-- Used with <input> element --\x3e\n<input class="btn btn-primary" type="button" value="PRIMARY" onclick="msg()">\n<input class="btn btn-secondary" type="button" value="SECONDARY" onclick="msg">\n<input class="btn btn-tertiary" type="button" value="TERTIARY" onclick="msg()">\n')),Object(a.b)("h2",{id:"group-buttons"},"Group Buttons"),Object(a.b)("p",null,"Note that these buttons have spaces between them. You can also group them with the ",Object(a.b)("inlineCode",{parentName:"p"},".btn-group")," class. Here is an example."),Object(a.b)("p",null,"Wrap a series of buttons with ",Object(a.b)("inlineCode",{parentName:"p"},".btn")," in ",Object(a.b)("inlineCode",{parentName:"p"},".btn-group"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note: Assistive Technology"),"\nIn order for assistive technologies (such as screen readers) to convey that a series of buttons is grouped, an appropriate role attribute needs to be provided. For button groups, this would be ",Object(a.b)("inlineCode",{parentName:"p"},'role="group"'),", while toolbars should have a ",Object(a.b)("inlineCode",{parentName:"p"},'role="toolbar"'),"."),Object(a.b)("p",null,"In addition, groups and toolbars should be given an explicit label, as most assistive technologies will otherwise not announce them, despite the presence of the correct role attribute. In the examples provided here, we use ",Object(a.b)("inlineCode",{parentName:"p"},"aria-label"),", but alternatives such as ",Object(a.b)("inlineCode",{parentName:"p"},"aria-labelledby")," can also be used."),Object(a.b)(r.c,{__position:1,__code:"<ButtonGroup>\n  <Button>Item Left</Button>\n  <Button>Item Middle</Button>\n  <Button>Item Right</Button>\n</ButtonGroup>",__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(u.a,{mdxType:"ButtonGroup"},Object(a.b)(s.a,{mdxType:"Button"},"Item Left"),Object(a.b)(s.a,{mdxType:"Button"},"Item Middle"),Object(a.b)(s.a,{mdxType:"Button"},"Item Right"))),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<div class="btn-group" role="group" aria-label="Basic example">\n    <button type="button" class="btn btn-primary">Item Left</button>\n    <button type="button" class="btn btn-primary">Item Middle</button>\n    <button type="button" class="btn btn-primary">Item Right</button>\n</div>\n')),Object(a.b)("h2",{id:"call-to-action-button"},"Call to Action Button"),Object(a.b)("p",null,"Call to Action (CTA) buttons are typically used in banners and carousels, or anywhere we would want the user to action a particular item. They may also be used on busy backgrounds to increase visibility. There is a limit of one CTA button per page and should be used for the most prominent action on the page. For additional buttons, please resort to one of the default styles.\n",Object(a.b)("strong",{parentName:"p"},"There is a limit of one CTA button per page and should be used for the most prominent action on the page.")),Object(a.b)("h3",{id:"cta-buttons"},"CTA Buttons"),Object(a.b)(r.c,{__position:2,__code:'<Button color="primary" className="mr-2 cta">\n  Primary\n</Button>\n<Button color="secondary" className="mr-2 cta">\n  Secondary\n</Button>\n<Button color="tertiary" className="mr-2 cta">\n  Tertiary\n</Button>\n<br />\n<Button color="primary" className="mr-2 mt-3 cta" size="lg">\n  Large Primary\n</Button>\n<Button color="secondary" className="mr-2 mt-3 cta" size="lg">\n  Large Secondary\n</Button>\n<Button color="tertiary" className="mr-2 mt-3 cta" size="lg">\n  Large Tertiary\n</Button>',__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(s.a,{color:"primary",className:"mr-2 cta",mdxType:"Button"},"Primary"),Object(a.b)(s.a,{color:"secondary",className:"mr-2 cta",mdxType:"Button"},"Secondary"),Object(a.b)(s.a,{color:"tertiary",className:"mr-2 cta",mdxType:"Button"},"Tertiary"),Object(a.b)("br",null),Object(a.b)(s.a,{color:"primary",className:"mr-2 mt-3 cta",size:"lg",mdxType:"Button"},"Large Primary"),Object(a.b)(s.a,{color:"secondary",className:"mr-2 mt-3 cta",size:"lg",mdxType:"Button"},"Large Secondary"),Object(a.b)(s.a,{color:"tertiary",className:"mr-2 mt-3 cta",size:"lg",mdxType:"Button"},"Large Tertiary")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<button type="button" class="btn btn-primary cta"Primary</button>\n<button type="button" class="btn btn-secondary cta">Secondary</button>\n<button type="button" class="btn btn-tertiary cta">Tertiary</button>\n')),Object(a.b)("h2",{id:"sizes"},"Sizes"),Object(a.b)("p",null,"Fancy larger or smaller buttons? Add ",Object(a.b)("inlineCode",{parentName:"p"},".btn-lg")," or ",Object(a.b)("inlineCode",{parentName:"p"},".btn-sm")," for additional sizes."),Object(a.b)("h3",{id:"large-buttons"},"Large Buttons"),Object(a.b)(r.c,{__position:3,__code:'<Button color="primary" className="mr-2" size="lg">\n  Large Primary\n</Button>\n<Button color="secondary" className="mr-2" size="lg">\n  Large Secondary\n</Button>\n<Button color="tertiary" className="mr-2" size="lg">\n  Large Tertiary\n</Button>',__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(s.a,{color:"primary",className:"mr-2",size:"lg",mdxType:"Button"},"Large Primary"),Object(a.b)(s.a,{color:"secondary",className:"mr-2",size:"lg",mdxType:"Button"},"Large Secondary"),Object(a.b)(s.a,{color:"tertiary",className:"mr-2",size:"lg",mdxType:"Button"},"Large Tertiary")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<button type="button" class="btn btn-primary btn-lg">Large Primary</button>\n<button type="button" class="btn btn-secondary btn-lg">Large Secondary</button>\n<button type="button" class="btn btn-tertiary btn-lg">Large Tertiary</button>\n')),Object(a.b)("h3",{id:"small-buttons"},"Small Buttons"),Object(a.b)(r.c,{__position:4,__code:'<Button color="primary" className="mr-2" size="sm">\n  Small Primary\n</Button>\n<Button color="secondary" className="mr-2" size="sm">\n  Small Secondary\n</Button>\n<Button color="tertiary" className="mr-2" size="sm">\n  Small Tertiary\n</Button>',__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(s.a,{color:"primary",className:"mr-2",size:"sm",mdxType:"Button"},"Small Primary"),Object(a.b)(s.a,{color:"secondary",className:"mr-2",size:"sm",mdxType:"Button"},"Small Secondary"),Object(a.b)(s.a,{color:"tertiary",className:"mr-2",size:"sm",mdxType:"Button"},"Small Tertiary")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<button type="button" class="btn btn-primary btn-sm">Primary</button>\n<button type="button" class="btn btn-secondary btn-sm">Secondary</button>\n<button type="button" class="btn btn-tertiary btn-sm">Tertiary</button>\n')),Object(a.b)("h2",{id:"block-button"},"Block Button"),Object(a.b)("p",null,"Create block level buttons that span the full width of a parent-by adding ",Object(a.b)("inlineCode",{parentName:"p"},".btn-block"),"."),Object(a.b)(r.c,{__position:5,__code:'<Button color="primary" size="lg" block>\n  Large Primary\n</Button>\n<Button color="secondary" size="lg" block>\n  Large Secondary\n</Button>\n<Button color="tertiary" size="lg" block>\n  Large Tertiary\n</Button>',__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(s.a,{color:"primary",size:"lg",block:!0,mdxType:"Button"},"Large Primary"),Object(a.b)(s.a,{color:"secondary",size:"lg",block:!0,mdxType:"Button"},"Large Secondary"),Object(a.b)(s.a,{color:"tertiary",size:"lg",block:!0,mdxType:"Button"},"Large Tertiary")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<button type="button" class="btn btn-primary btn-lg btn-block">Primary</button>\n<button type="button" class="btn btn-secondary btn-lg btn-block">Secondary</button>\n<button type="button" class="btn btn-tertiary btn-lg btn-block">Tertiary</button>\n')),Object(a.b)("h2",{id:"active-state"},"Active state"),Object(a.b)("p",null,"Buttons will appear pressed (with a darker background, darker border and inset shadow) when active. There\u2019s no need to add a class to ",Object(a.b)("inlineCode",{parentName:"p"},"<button>"),"s as they use a pseudo-class. However, you can still force the same active appearance with ",Object(a.b)("inlineCode",{parentName:"p"},".active")," (and include the aria-pressed='true' attribute) should you need to replicate the state programmatically."),Object(a.b)("p",null,"Add ",Object(a.b)("inlineCode",{parentName:"p"},".active")," to items in the dropdown to style them as active."),Object(a.b)("h3",{id:"active-button"},"Active Button"),Object(a.b)(r.c,{__position:6,__code:'<Button color="primary" active className="mr-2">\n  Primary\n</Button>\n<Button color="secondary" active className="mr-2">\n  Secondary\n</Button>\n<Button color="tertiary" active className="mr-2">\n  Tertiary\n</Button>',__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(s.a,{color:"primary",active:!0,className:"mr-2",mdxType:"Button"},"Primary"),Object(a.b)(s.a,{color:"secondary",active:!0,className:"mr-2",mdxType:"Button"},"Secondary"),Object(a.b)(s.a,{color:"tertiary",active:!0,className:"mr-2",mdxType:"Button"},"Tertiary")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<button type="button" class="btn btn-primary active">Primary</button>\n<button type="button" class="btn btn-secondary active">Secondary</button>\n<button type="button" class="btn btn-tertiary active">Tertiary</button>\n')),Object(a.b)("h2",{id:"disabled-state"},"Disabled state"),Object(a.b)("p",null,"Make buttons look inactive by adding the disabled boolean attribute to any ",Object(a.b)("inlineCode",{parentName:"p"},"<button>")," element."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"However to make the style for disabled buttons in compliance to Staples Design System we would use another colour class for disabled buttons")),Object(a.b)("p",null,"Add ",Object(a.b)("inlineCode",{parentName:"p"},".disabled")," to items in the dropdown to style them as disabled."),Object(a.b)("h3",{id:"disabled-default-button"},"Disabled Default Button"),Object(a.b)(r.c,{__position:7,__code:'<Button color="primary" disabled className="mr-2">\n  Primary\n</Button>\n\n<Button color="secondary" disabled className="mr-2">\n  Secondary\n</Button>\n\n<Button color="tertiary" disabled className="mr-2">\n  Tertiary\n</Button>',__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(s.a,{color:"primary",disabled:!0,className:"mr-2",mdxType:"Button"},"Primary"),Object(a.b)(s.a,{color:"secondary",disabled:!0,className:"mr-2",mdxType:"Button"},"Secondary"),Object(a.b)(s.a,{color:"tertiary",disabled:!0,className:"mr-2",mdxType:"Button"},"Tertiary")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<button type="button" class="btn btn-tertiary" disabled >Primary</button>\n<button type="button" class="btn btn-tertiary" disabled >Secondary</button>\n<button type="button" class="btn btn-tertiary" disabled >Tertiary</button>\n')),Object(a.b)("h3",{id:"disabled-call-to-action-button"},"Disabled Call To Action Button"),Object(a.b)(r.c,{__position:8,__code:'<Button color="primary" disabled className="mr-2 cta">\n  Primary\n</Button>\n\n<Button color="secondary" disabled className="mr-2 cta">\n  Secondary\n</Button>\n\n<Button color="tertiary" disabled className="mr-2 cta">\n  Tertiary\n</Button>',__scope:{props:this?this.props:o,Playground:r.c,Props:r.d,Button:s.a,ButtonDropdown:b.a,DropdownToggle:l.a,DropdownMenu:c.a,DropdownItem:i.a,ButtonGroup:u.a,ButtonToolbar:d.a,UncontrolledButtonDropdown:p.a},mdxType:"Playground"},Object(a.b)(s.a,{color:"primary",disabled:!0,className:"mr-2 cta",mdxType:"Button"},"Primary"),Object(a.b)(s.a,{color:"secondary",disabled:!0,className:"mr-2 cta",mdxType:"Button"},"Secondary"),Object(a.b)(s.a,{color:"tertiary",disabled:!0,className:"mr-2 cta",mdxType:"Button"},"Tertiary")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<button type="button" class="btn btn-primary cta" disabled>Primary</button>\n<button type="button" class="btn btn-secondary cta" disabled>Secondary</button>\n<button type="button" class="btn btn-tertiary cta" disabled>Tertiary</button>\n')),Object(a.b)("h3",{id:"link-functionality-caveat"},"Link functionality caveat"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},".disabled")," class uses ",Object(a.b)("inlineCode",{parentName:"p"},"pointer-events: none")," to try to disable the link functionality of ",Object(a.b)("inlineCode",{parentName:"p"},"<a>"),", but that CSS property is not yet standardized. In addition, even in browsers that do support ",Object(a.b)("inlineCode",{parentName:"p"},"pointer-events: none"),", keyboard navigation remains unaffected, meaning that sighted keyboard users and users of assistive technologies will still be able to activate these links. So to be safe, add a ",Object(a.b)("inlineCode",{parentName:"p"},"tabindex='-1'")," attribute on these links (to prevent them from receiving keyboard focus) and use custom JavaScript to disable their functionality."),Object(a.b)("p",null,"Disabled buttons using the ",Object(a.b)("inlineCode",{parentName:"p"},"<a>")," element behave a bit differently:"),Object(a.b)("ul",null,Object(a.b)("li",null,"It doesn't support the disabled attribute, so you must add the .disabled class to make it visually appear disabled."),Object(a.b)("li",null,"Some future-friendly styles are included to disable all pointer-events on anchor buttons. In browsers which support that property, you won\u2019t see the disabled cursor at all."),Object(a.b)("li",null,"Disabled buttons should include the aria-disabled='true' attribute to indicate the state of the element to assistive technologies.")))}B&&B===Object(B)&&Object.isExtensible(B)&&Object.defineProperty(B,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"components/Button/buttons.mdx"}}),B.isMDXComponent=!0}}]);
//# sourceMappingURL=components-button-buttons.afda1694a9a92002a462.js.map