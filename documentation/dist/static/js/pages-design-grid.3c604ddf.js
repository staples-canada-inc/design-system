(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"./pages/Design/grid.mdx":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return x});var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),i=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),s=a("./public/images/grid_cols_rows.jpg"),l=a.n(s),b=a("./public/images/grid_gutters.jpg"),r=a.n(b),c=a("./public/images/grid_margins.jpg"),d=a.n(c),p=a("./public/images/grid_padding.jpg"),o=a.n(p),g=a("./public/images/sizing_scale.jpg"),m=a.n(g),u=a("./public/images/vertical_spacing.jpg"),j=a.n(u),O={},h="wrapper";function x(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)(h,Object.assign({},O,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"grid--layout"},"Grid & Layout"),Object(i.b)("h2",{id:"mini-unit"},"Mini Unit"),Object(i.b)("p",null,"At the core of the Staples Design System lies the 6 px mini unit. Multiples of the mini unit compose the dimensions of columns, rows, margins, padding and gutters. The mini unit allows enough flexibility whilst still maintaining a consistent visual rhythm."),Object(i.b)("p",null,"Multiples of mini units create the breakpoint boundaries, so that content will seamlessly fit the grid regardless of screen size. This allows for fluid layouts that are essential to responsive design. "),Object(i.b)("h2",{id:"grid-fundamentals"},"Grid Fundamentals"),Object(i.b)("p",null,"The core concept of the 6x grid is to divide or multiply by six. Every element of the UI -- spacing, boxes, icons, images, rows, columns -- are either a multiple of six or are divisible by six. "),Object(i.b)("h3",{id:"fluid-grid"},"Fluid Grid"),Object(i.b)("p",null,"A fluid grid divides a space by the same amount of columns regardless of screen size. Within a breakpoint, the unit size scales down to accommodate this constant column count."),Object(i.b)("h3",{id:"fixed-grid"},"Fixed Grid"),Object(i.b)("p",null,"A fixed grid starts with a fixed size from the established sizing scale (mini unit), then tiles content as needed. Content re-shuffling often follows a natural pattern of left-to-right, top-to-bottom sequence. "),Object(i.b)("p",null,"To implement a fixed grid, multiply units by six and mix them together. When tiling fixed boxes, a grid emerges naturally due to the consistent use of a sizing scale. Content will always match column sizes of breakpoint boundaries so long as you are following the established scaling correctly."),Object(i.b)("h3",{id:"column-and-rows"},"Column and Rows"),Object(i.b)("p",null,"Construct columns by either dividing a space into a fluid grid, or by tiling fixed boxes in multiples. For dense content like typography, element icons and smaller components use the mini unit for spatial reference and alignment. For larger items, like carousels, banners, promotions and modals, you can refer to larger units of the mini unit."),Object(i.b)("div",{class:"col bg-light w-100 text-center py-4"},Object(i.b)("img",{src:l.a,class:"w-75"})),Object(i.b)("h3",{id:"margins"},"Margins"),Object(i.b)("p",null,"The margins at the outer edge of the grid are always the same size regardless of breakpoint, even when columns are fluid. The Staples Design System uses a margin of 10px."),Object(i.b)("div",{class:"col bg-light w-100 text-center py-4"},Object(i.b)("img",{src:d.a,class:"w-75"})),Object(i.b)("h3",{id:"padding"},"Padding"),Object(i.b)("p",null,"Padding is always a fixed multiple of mini units. In the Staples Design System it\u2019s 12 px at all standard breakpoints. Always align type against the padding. Some design tools add padding to text boxes by default; check text box padding and remove if necessary."),Object(i.b)("div",{class:"col bg-light w-100 text-center py-4"},Object(i.b)("img",{src:o.a,class:"w-75"})),Object(i.b)("h3",{id:"gutters"},"Gutters"),Object(i.b)("p",null,"Grid gutters can be absent as illustrated above, or present as shown below. The margin around each grid box is 15px for a total gutter of 30px. Note how the total gutter size maintains the scaling proportions as it\u2019s divisible by six. For closely related content, consider a gutterless grid. Apply gutters when content warrants more separation."),Object(i.b)("div",{class:"col bg-light w-100 text-center py-4"},Object(i.b)("img",{src:r.a,class:"w-75"})),Object(i.b)("h3",{id:"sizing-scale"},"Sizing Scale"),Object(i.b)("p",null,"The sizing scale is centered around the mini unit. Use it to size content as well as negative space. Like a type scale, the sizing scale constrains the range of sizes to improve consistency and rhythm, while still allowing flexibility. Spacing tokens are applied to maintain consistency across Staples interfaces."),Object(i.b)("div",{class:"col bg-light w-100 text-center py-4"},Object(i.b)("img",{src:m.a,class:"w-75"})),Object(i.b)("br",null),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Mini Unit(s)"),Object(i.b)("th",Object.assign({parentName:"tr"},{align:"left"}),"Sizing Scale"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"1x"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"6 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"2x"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"12 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"3x"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"18 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"4x"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"24 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"5x"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"30 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"6x"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"36 px")))),Object(i.b)("h3",{id:"aspect-ratio"},"Aspect Ratio"),Object(i.b)("p",null,"When sizing boxes, constrain dimensions to one of the aspect ratios shown below whenever possible. Doing so will heighten the perception of unity between products."),Object(i.b)("p",null,"Choose an aspect ratio from the table, then multiply the base unit in each dimension as needed to set width and height, maintaining the ratio in either portrait or landscape. Reference the table below as an example."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Aspect Ratio"),Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Base Unit"),Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Sizing Scale (px)"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"1 : 1"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"24 px"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"24 x 24")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"2 : 1"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"24 px"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"48 x 24")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"2 : 3"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"24 px"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"48 x 72")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"3 : 2"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"24 px"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"72 x 48")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"4 : 3"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"24 px"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"98 x 72")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"16 : 9"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"24 px"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"384 x 216")))),Object(i.b)("h3",{id:"vertical-rhythm"},"Vertical Rhythm"),Object(i.b)("p",null,"Use the fixed sizing scale to set vertical spacing between sections, by adding it to the top or bottom margin of a box. "),Object(i.b)("div",{class:"col bg-light w-100 text-center py-4"},Object(i.b)("img",{src:j.a,class:"w-75"})),Object(i.b)("p",null,"The same applies to components. Use the mini unit for smaller spacing within components and text fields, or between text boxes and other dense items. When multiple components adhere to the same scale, grid relationships naturally emerge. "),Object(i.b)("hr",null),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("h3",{id:"breakpoints"},"Breakpoints"),Object(i.b)("p",null,"Since Staples.ca is predominantly desktop first, we use a set of maximum-width media queries to create sensible breakpoints for the layouts of our interfaces. The breakpoints specify a maximum viewport width and allow us to scale down elements as the screen size gets smaller."),Object(i.b)("p",null,"Use this set of standard breakpoints to maintain layout integrity across screen sizes. For optimal results, test the design and code at each of these breakpoints."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Screen Size"),Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Device"),Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Breakpoint (max-width)"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Extra-Small"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Portrait Phones"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"< 576 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Small"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Landscape Phones"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"< 768 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Medium"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Tablets"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"< 992 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Large"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Desktops"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"< 1200 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Extra-Large"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Large Desktops / Monitors"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"--")))),Object(i.b)("h3",{id:"media-queries"},"Media Queries"),Object(i.b)("p",null,"The following media query ranges\u2014or breakpoints\u2014can be used in your source Sass files for the layout, grid system, and components."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"// Extra small devices (portrait phones, less than 576px)\n@media (max-width: 575.98px) { ... }\n\n// Small devices (landscape phones, less than 768px)\n@media (max-width: 767.98px) { ... }\n\n// Medium devices (tablets, less than 992px)\n@media (max-width: 991.98px) { ... }\n\n// Large devices (desktops, less than 1200px)\n@media (max-width: 1199.98px) { ... }\n\n// Extra large devices (large desktops)\n// No media query since the extra-large breakpoint has no upper bound on its width\n")),Object(i.b)("p",null,"These media queries are also available via Sass mixins:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"@include media-breakpoint-down(xs) { ... }\n@include media-breakpoint-down(sm) { ... }\n@include media-breakpoint-down(md) { ... }\n@include media-breakpoint-down(lg) { ... }\n// No media query necessary for xl breakpoint as it has no upper bound on its width\n\n// Example: Style from medium breakpoint and down\n@include media-breakpoint-down(md) {\n.custom-class {\n    display: block;\n}\n}\n")),Object(i.b)("p",null,"These breakpoints or media queries work in the opposite direction (the given screen size or larger) and can be used when designing a mobile first interface:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Screen Size"),Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Device"),Object(i.b)("th",Object.assign({parentName:"tr"},{align:null}),"Breakpoint (min-width)"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Extra-Small"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Portrait Phones"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"--")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Small"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Landscape Phones"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"> 576 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Medium"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Tablets"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"> 768 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Large"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Desktops"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"> 992 px")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Extra-Large"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"Large Desktops / Monitors"),Object(i.b)("td",Object.assign({parentName:"tr"},{align:null}),"> 1200 px")))),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"// Extra small devices (portrait phones, less than 576px)\n// No media query for `xs` since this is the default in Bootstrap\n\n// Small devices (landscape phones, 576px and up)\n@media (min-width: 576px) { ... }\n\n// Medium devices (tablets, 768px and up)\n@media (min-width: 768px) { ... }\n\n// Large devices (desktops, 992px and up)\n@media (min-width: 992px) { ... }\n\n// Extra large devices (large desktops, 1200px and up)\n@media (min-width: 1200px) { ... }\n")),Object(i.b)("p",null,"Again, these media queries are also available via Sass mixins:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"// No media query necessary for xs breakpoint as it's effectively `@media (min-width: 0) { ... }`\n@include media-breakpoint-up(sm) { ... }\n@include media-breakpoint-up(md) { ... }\n@include media-breakpoint-up(lg) { ... }\n@include media-breakpoint-up(xl) { ... }\n\n// Example: Hide starting at `min-width: 0`, and then show at the `sm` breakpoint\n.custom-class {\n    display: none;\n}\n@include media-breakpoint-up(sm) {\n    .custom-class {\n        display: block;\n    }\n}\n")),Object(i.b)("p",null,"There are also media queries and mixins for targeting a single segment of screen sizes using both minimum and maximum breakpoint widths."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"// Extra small devices (portrait phones, less than 576px)\n@media (max-width: 575.98px) { ... }\n\n// Small devices (landscape phones, 576px and up)\n@media (min-width: 576px) and (max-width: 767.98px) { ... }\n\n// Medium devices (tablets, 768px and up)\n@media (min-width: 768px) and (max-width: 991.98px) { ... }\n\n// Large devices (desktops, 992px and up)\n@media (min-width: 992px) and (max-width: 1199.98px) { ... }\n\n// Extra large devices (large desktops, 1200px and up)\n@media (min-width: 1200px) { ... }\n\n\n\n@include media-breakpoint-only(xs) { ... }\n@include media-breakpoint-only(sm) { ... }\n@include media-breakpoint-only(md) { ... }\n@include media-breakpoint-only(lg) { ... }\n@include media-breakpoint-only(xl) { ... }\n")))}x&&x===Object(x)&&Object.isExtensible(x)&&Object.defineProperty(x,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"pages/Design/grid.mdx"}}),x.isMDXComponent=!0},"./public/images/grid_cols_rows.jpg":function(e,t,a){e.exports=a.p+"static/img/grid_cols_rows.9bdbe2d5.jpg"},"./public/images/grid_gutters.jpg":function(e,t,a){e.exports=a.p+"static/img/grid_gutters.1f31442c.jpg"},"./public/images/grid_margins.jpg":function(e,t,a){e.exports=a.p+"static/img/grid_margins.fb082396.jpg"},"./public/images/grid_padding.jpg":function(e,t,a){e.exports=a.p+"static/img/grid_padding.e53d47e8.jpg"},"./public/images/sizing_scale.jpg":function(e,t,a){e.exports=a.p+"static/img/sizing_scale.b3b676ba.jpg"},"./public/images/vertical_spacing.jpg":function(e,t,a){e.exports=a.p+"static/img/vertical_spacing.9d34a43f.jpg"}}]);
//# sourceMappingURL=pages-design-grid.55ea3ae7a62b6798f48b.js.map