(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"./components/Tooltip/tooltips.mdx":function(t,e,o){"use strict";o.r(e),o.d(e,"default",function(){return r});var l=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),n=(o("./node_modules/react/index.js"),o("./node_modules/@mdx-js/react/dist/index.es.js")),i=o("./node_modules/docz/dist/index.esm.js"),b=o("./node_modules/reactstrap/es/UncontrolledTooltip.js"),a={},p="wrapper";function r(t){var e=t.components,o=Object(l.a)(t,["components"]);return Object(n.b)(p,Object.assign({},a,o,{components:e,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"tooltips"},"Tooltips"),Object(n.b)("p",null,"Tooltips provide additional but non-essential information upon hover or focus. The information should be contextual and useful. Keep tooltips short."),Object(n.b)("h2",{id:"tooltip-in-text"},"Tooltip in Text"),Object(n.b)(i.c,{__position:0,__code:'<p>\n  This tooltip displays to the{\' \'}\n  <a href="#" id="UncontrolledTooltipExample1">\n    top\n  </a>\n  .\n</p>\n<p>\n  This tooltip displays to the{\' \'}\n  <a href="#" id="UncontrolledTooltipExample2">\n    right\n  </a>\n  .\n</p>\n<p>\n  This tooltip displays to the{\' \'}\n  <a href="#" id="UncontrolledTooltipExample3">\n    bottom\n  </a>\n  .\n</p>\n<p>\n  This tooltip displays to the{\' \'}\n  <a href="#" id="UncontrolledTooltipExample4">\n    left\n  </a>\n  .\n</p>\n\n<UncontrolledTooltip placement="top" target="UncontrolledTooltipExample1">\n  Tooltip on top\n</UncontrolledTooltip>\n<UncontrolledTooltip placement="right" target="UncontrolledTooltipExample2">\n  Tooltip on right\n</UncontrolledTooltip>\n<UncontrolledTooltip placement="bottom" target="UncontrolledTooltipExample3">\n  Tooltip on bottom\n</UncontrolledTooltip>\n<UncontrolledTooltip placement="left" target="UncontrolledTooltipExample4">\n  Tooltip on left\n</UncontrolledTooltip>',__scope:{props:this?this.props:o,Playground:i.c,Props:i.d,UncontrolledTooltip:b.a},mdxType:"Playground"},Object(n.b)("p",null,"This tooltip displays to the ",Object(n.b)("a",{href:"#",id:"UncontrolledTooltipExample1"},"top"),"."),Object(n.b)("p",null,"This tooltip displays to the ",Object(n.b)("a",{href:"#",id:"UncontrolledTooltipExample2"},"right"),"."),Object(n.b)("p",null,"This tooltip displays to the ",Object(n.b)("a",{href:"#",id:"UncontrolledTooltipExample3"},"bottom"),"."),Object(n.b)("p",null,"This tooltip displays to the ",Object(n.b)("a",{href:"#",id:"UncontrolledTooltipExample4"},"left"),"."),Object(n.b)(b.a,{placement:"top",target:"UncontrolledTooltipExample1",mdxType:"UncontrolledTooltip"},"Tooltip on top"),Object(n.b)(b.a,{placement:"right",target:"UncontrolledTooltipExample2",mdxType:"UncontrolledTooltip"},"Tooltip on right"),Object(n.b)(b.a,{placement:"bottom",target:"UncontrolledTooltipExample3",mdxType:"UncontrolledTooltip"},"Tooltip on bottom"),Object(n.b)(b.a,{placement:"left",target:"UncontrolledTooltipExample4",mdxType:"UncontrolledTooltip"},"Tooltip on left")),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),'<p>This tooltip displays to the <a href="#" data-toggle="tooltip" data-placement="top" title="Tooltip on top">top</a>.</p>\n<p>This tooltip displays to the <a href="#" data-toggle="tooltip" data-placement="right" title="Tooltip on right">right</a>.</p>\n<p>This tooltip displays to the <a href="#" data-toggle="tooltip" data-placement="bottom" title="Tooltip on bottom">bottom</a>.</p>\n<p>This tooltip displays to the <a href="#" data-toggle="tooltip" data-placement="left" title="Tooltip on left">left</a>.</p>\n')),Object(n.b)("p",null,"When triggered from hyperlinks that span multiple lines, tooltips will be centered. Use ",Object(n.b)("inlineCode",{parentName:"p"},"white-space: nowrap;")," on your ",Object(n.b)("inlineCode",{parentName:"p"},"<a>")," to avoid this behavior."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Note: Tooltips with zero-length titles are never displayed.")),Object(n.b)("h2",{id:"tooltip-in-button"},"Tooltip in Button"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),'<button type="button" class="btn btn-secondary" data-toggle="tooltip" data-placement="top" title="Tooltip on top">Tooltip on top</button>\n<button type="button" class="btn btn-secondary" data-toggle="tooltip" data-placement="right" title="Tooltip on right">Tooltip on right</button>\n<button type="button" class="btn btn-secondary" data-toggle="tooltip" data-placement="bottom" title="Tooltip on bottom">Tooltip on bottom</button>\n<button type="button" class="btn btn-secondary" data-toggle="tooltip" data-placement="left" title="Tooltip on left">Tooltip on left</button>\n')),Object(n.b)("p",null,"Specify ",Object(n.b)("inlineCode",{parentName:"p"},"container: 'body'")," to avoid rendering problems in more complex components (like our input groups, button groups, etc)."),Object(n.b)("h2",{id:"tooltip-on-disabled-elements"},"Tooltip on Disabled Elements"),Object(n.b)("p",null,"Elements with the ",Object(n.b)("inlineCode",{parentName:"p"},"disabled")," attribute aren\u2019t interactive, meaning users cannot focus, hover or click them to trigger a tooltip (or popover). As a workaround, you\u2019ll want to trigger the tooltip from a wrapper ",Object(n.b)("inlineCode",{parentName:"p"},"<div>")," or ",Object(n.b)("inlineCode",{parentName:"p"},"<span>"),", ideally made keyboard-focusable using ",Object(n.b)("inlineCode",{parentName:"p"},'tabindex="0"'),", and override the ",Object(n.b)("inlineCode",{parentName:"p"},"pointer-events")," on the disabled element."),Object(n.b)("h2",{id:"usage"},"Usage"),Object(n.b)("p",null,"Tooltips must be hidden before their corresponding elements have been removed from the DOM. Since tooltips are triggered by an element inside a shadow DOM, they can't be triggered on hidden elements."),Object(n.b)("h3",{id:"markup"},"Markup"),Object(n.b)("p",null,"The required markup for a tooltip is only a data attribute and title on the HTML element you wish to have a tooltip. The generated markup of a tooltip is rather simple, though it does require a position (by default, set to top by the plugin)."),Object(n.b)("h3",{id:"animation"},"Animation"),Object(n.b)("p",null,"The animation effect of this component is dependent on the ",Object(n.b)("inlineCode",{parentName:"p"},"prefers-reduced-motion")," media query. One way to initialize all tooltips on a page would be to select them by their data-toggle attribute:"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$(function () {\n    $('[data-toggle=\"tooltip\"]').tooltip()\n})\n")),Object(n.b)("p",null,"The tooltip plugin generates content and markup on demand, and by default places tooltips after their trigger element."),Object(n.b)("h3",{id:"trigger-via-javascript"},"Trigger via JavaScript"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#example').tooltip(options)\n")),Object(n.b)("h3",{id:"overflow-auto-and-scroll"},"Overflow Auto and Scroll"),Object(n.b)("p",null,"Tooltip position attempts to automatically change when a parent container has ",Object(n.b)("inlineCode",{parentName:"p"},"overflow: auto")," or ",Object(n.b)("inlineCode",{parentName:"p"},"overflow: scroll")," like our ",Object(n.b)("inlineCode",{parentName:"p"},".table-responsive")," however, it still keeps the original position. As a workaround, set the boundary option to anything other than default value, 'scrollParent', such as 'window':"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"`$('#example').tooltip({ boundary: 'window' })`\n")),Object(n.b)("h2",{id:"assistive-technology"},"Assistive Technology"),Object(n.b)("p",null,"You should only add tooltips to HTML elements that are traditionally keyboard-focusable and interactive (such as links or form controls). Although arbitrary HTML elements (such as ",Object(n.b)("inlineCode",{parentName:"p"},"<span>"),"s) can be made focusable by adding the ",Object(n.b)("inlineCode",{parentName:"p"},'tabindex="0"')," attribute, this will add potentially annoying and confusing tab stops on non-interactive elements for keyboard users. In addition, most assistive technologies currently do not announce the tooltip in this situation."),Object(n.b)("p",null,"Additionally, do not rely solely on hover as the trigger for your tooltip, as this will make your tooltips impossible to trigger for keyboard users."),Object(n.b)("h2",{id:"options"},"Options"),Object(n.b)("p",null,"Options can be passed via data attributes or JavaScript. For data attributes, append the option name to ",Object(n.b)("inlineCode",{parentName:"p"},"data-"),", as in ",Object(n.b)("inlineCode",{parentName:"p"},'data-animation=""'),"."),Object(n.b)("p",null,"Note that for security reasons the ",Object(n.b)("inlineCode",{parentName:"p"},"sanitize"),", ",Object(n.b)("inlineCode",{parentName:"p"},"sanitizeFn")," and ",Object(n.b)("inlineCode",{parentName:"p"},"whiteList")," options cannot be supplied using data attributes."),Object(n.b)("table",{class:"table table-bordered table-striped"},Object(n.b)("thead",null,Object(n.b)("tr",null,Object(n.b)("th",{style:{width:100}},"Name"),Object(n.b)("th",{style:{width:100}},"Type"),Object(n.b)("th",{style:{width:100}},"Default"),Object(n.b)("th",null,"Description"))),Object(n.b)("tbody",null,Object(n.b)("tr",null,Object(n.b)("td",null,"animation"),Object(n.b)("td",null,"boolean"),Object(n.b)("td",null,"true"),Object(n.b)("td",null,"Apply a CSS fade transition to the tooltip")),Object(n.b)("tr",null,Object(n.b)("td",null,"container"),Object(n.b)("td",null,"string / element / false"),Object(n.b)("td",null,"false"),Object(n.b)("td",null,Object(n.b)("p",null,"Appends the tooltip to a specific element. Example:",Object(n.b)("code",null,"container: 'body'"),". This option is particularly useful in that it allows you to position the tooltip in the flow of the document near the triggering element -\xa0which will prevent the tooltip from floating away from the triggering element during a window resize."))),Object(n.b)("tr",null,Object(n.b)("td",null,"delay"),Object(n.b)("td",null,"number / object"),Object(n.b)("td",null,"0"),Object(n.b)("td",null,Object(n.b)("p",null,"Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type"),Object(n.b)("p",null,"If a number is supplied, delay is applied to both hide/show"))),Object(n.b)("tr",null,Object(n.b)("td",null,"html"),Object(n.b)("td",null,"boolean"),Object(n.b)("td",null,"false"),Object(n.b)("td",null,Object(n.b)("p",null,"Allow HTML in the tooltip."),Object(n.b)("p",null,"If true, HTML tags in the tooltip's ",Object(n.b)("code",null,"title")," will be rendered in the tooltip. If false, ",Object(n.b)("code",null,"innerText")," ","property will be used to insert content into the DOM."),Object(n.b)("p",null,"Use text if you're worried about XSS attacks."))),Object(n.b)("tr",null,Object(n.b)("td",null,"placement"),Object(n.b)("td",null,"string / function"),Object(n.b)("td",null,"'top'"),Object(n.b)("td",null,Object(n.b)("p",null,"How to position the tooltip - auto | top | bottom | left | right. When ",Object(n.b)("code",null,"auto")," is specified, it will dynamically reorient the tooltip."),Object(n.b)("p",null,"ction is used to determine the placement, it is called with the tooltip DOM node as its first argument and the triggering element DOM node as its second. The"," ",Object(n.b)("code",null,"'this'"),"context is set to the tooltip instance."))),Object(n.b)("tr",null,Object(n.b)("td",null,"selector"),Object(n.b)("td",null,"string / false"),Object(n.b)("td",null,"false"),Object(n.b)("td",null,"If a selector is provided, tooltip objects will be delegated to the specified targets. In practice, this is used to also apply tooltips to dynamically added DOM elements (",Object(n.b)("code",null,"jQuery.on"),"support).")),Object(n.b)("tr",null,Object(n.b)("td",null,"template"),Object(n.b)("td",null,"string"),Object(n.b)("td",null,Object(n.b)("code",null,'\'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>\'')),Object(n.b)("td",null,Object(n.b)("p",null,"Base HTML to use when creating the tooltip."),Object(n.b)("p",null,"The tooltip's ",Object(n.b)("code",null,"title")," will be injected into the",Object(n.b)("code",null,".tooltip-inner"),"."),Object(n.b)("p",null,Object(n.b)("code",null,".tooltip-arrow")," will become the tooltip's arrow."),Object(n.b)("p",null,"The outermost wrapper element should have the"," ",Object(n.b)("code",null,".tooltip"),"class and ",Object(n.b)("code",null,'role="tooltip"'),"."))),Object(n.b)("tr",null,Object(n.b)("td",null,"title"),Object(n.b)("td",null,"string / element / function"),Object(n.b)("td",null),Object(n.b)("td",null,Object(n.b)("p",null,"Default title value if ",Object(n.b)("code",null,"'title")," attribute isn't present."),Object(n.b)("p",null,"If a function is given, it will be called with its"," ",Object(n.b)("code",null,"'this'"),"reference set to the element that the tooltip is attached to."))),Object(n.b)("tr",null,Object(n.b)("td",null,"trigger"),Object(n.b)("td",null,"string"),Object(n.b)("td",null,"'hover focus'"),Object(n.b)("td",null,Object(n.b)("p",null,"How tooltip is triggered - click | hover | focus | manual. You may pass multiple triggers; separate them with a space."),Object(n.b)("p",null,Object(n.b)("code",null,"'manual'")," indicates that the tooltip will be triggered programmatically via the"," ",Object(n.b)("code",null,".tooltip('show')"),",",Object(n.b)("code",null,".tooltip('hide')")," ","and ",Object(n.b)("code",null,".tooltip('toggle')")," methods; this value cannot be combined with any other trigger."),Object(n.b)("p",null,Object(n.b)("code",null,"'hover'")," on its own will result in tooltips that cannot be triggered via the keyboard, and should only be used if alternative methods for conveying the same information for keyboard users is present."))),Object(n.b)("tr",null,Object(n.b)("td",null,"offset"),Object(n.b)("td",null,"number / string / function"),Object(n.b)("td",null,"0"),Object(n.b)("td",null,Object(n.b)("p",null,"offset of the tooltip relative to its target."),Object(n.b)("p",null,"When a function is used to determine the offset, it is called with an object containing the offset data as its first argument. The function must return an object with the same structure. The triggering element DOM node is passed as the second argument."),Object(n.b)("p",null,"For more information refer to Popper.js's",Object(n.b)("a",{href:"https://popper.js.org/popper-documentation.html#modifiers..offset.offset"},"offset docs"),"."))),Object(n.b)("tr",null,Object(n.b)("td",null,"fallbackPlacement"),Object(n.b)("td",null,"string / array"),Object(n.b)("td",null,"'flip'"),Object(n.b)("td",null,"Allow to specify which position Popper will use on fallback. For more information refer to Popper.js's",Object(n.b)("a",{href:"https://popper.js.org/popper-documentation.html#modifiers..flip.behavior"},"behavior docs"))),Object(n.b)("tr",null,Object(n.b)("td",null,"boundary"),Object(n.b)("td",null,"string / element"),Object(n.b)("td",null,"'scrollParent'"),Object(n.b)("td",null,"Overflow constraint boundary of the tooltip. Accepts the values of ",Object(n.b)("code",null,"'viewport'"),", ",Object(n.b)("code",null,"'window'"),","," ",Object(n.b)("code",null,"'scrollParent'"),", or an HTMLElement reference (JavaScript only).")),Object(n.b)("tr",null,Object(n.b)("td",null,"sanitize"),Object(n.b)("td",null,"boolean"),Object(n.b)("td",null,"true"),Object(n.b)("td",null,"Enable or disable the sanitization. If activated"," ",Object(n.b)("code",null,"'template'"),"and ",Object(n.b)("code",null,"'title'")," options will be sanitized.")),Object(n.b)("tr",null,Object(n.b)("td",null,"whiteList"),Object(n.b)("td",null,"object"),Object(n.b)("td",null,"Default value"),Object(n.b)("td",null,"Object which contains allowed attributes and tags")),Object(n.b)("tr",null,Object(n.b)("td",null,"sanitizeFn"),Object(n.b)("td",null,"null | function"),Object(n.b)("td",null,"null"),Object(n.b)("td",null,"Here you can supply your own sanitize function. This can be useful if you prefer to use a dedicated library to perform sanitization.")))),Object(n.b)("h2",{id:"methods"},"Methods"),Object(n.b)("h4",{id:"asynchronous-methods-and-transitions"},"Asynchronous methods and transitions"),Object(n.b)("p",null,"All API methods are ",Object(n.b)("strong",{parentName:"p"},"asynchronous")," and start a ",Object(n.b)("strong",{parentName:"p"},"transition"),". They return to the caller as soon as the transition is started but ",Object(n.b)("strong",{parentName:"p"},"before it ends"),". In addition, a method call on a ",Object(n.b)("strong",{parentName:"p"},"transitioning component will be ignored"),Object(n.b)("br",{parentName:"p"}),"\n","See Bootstrap\u2019s JavaScript documentation for more information."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$().tooltip(options)\n")),Object(n.b)("p",null,"Attaches a tooltip handler to an element collection."),Object(n.b)("h4",{id:"tooltipshow"},".tooltip(\u2018show\u2019)"),Object(n.b)("p",null,"Reveals an element\u2019s tooltip. Returns to the caller before the tooltip has actually been shown (i.e. before the ",Object(n.b)("inlineCode",{parentName:"p"},"shown.bs.tooltip")," event occurs). This is considered a \u201cmanual\u201d triggering of the tooltip. Tooltips with zero-length titles are never displayed."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#element').tooltip('show')\n")),Object(n.b)("h4",{id:"tooltiphide"},".tooltip(\u2018hide\u2019)"),Object(n.b)("p",null,"Hides an element\u2019s tooltip. Returns to the caller before the tooltip has actually been hidden (i.e. before the ",Object(n.b)("inlineCode",{parentName:"p"},"hidden.bs.tooltip")," event occurs). This is considered a \u201cmanual\u201d triggering of the tooltip."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#element').tooltip('hide')\n")),Object(n.b)("h4",{id:"tooltiptoggle"},".tooltip(\u2018toggle\u2019)"),Object(n.b)("p",null,"Toggles an element\u2019s tooltip. Returns to the caller before the tooltip has actually been shown or hidden (i.e. before the ",Object(n.b)("inlineCode",{parentName:"p"},"shown.bs.tooltip")," or ",Object(n.b)("inlineCode",{parentName:"p"},"hidden.bs.tooltip")," event occurs). This is considered a \u201cmanual\u201d triggering of the tooltip."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#element').tooltip('toggle')\n")),Object(n.b)("h4",{id:"tooltipdispose"},".tooltip(\u2018dispose\u2019)"),Object(n.b)("p",null,"Hides and destroys an element\u2019s tooltip. Tooltips that use delegation (which are created using the selector option) cannot be individually destroyed on descendant trigger elements."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#element').tooltip('dispose')\n")),Object(n.b)("h4",{id:"tooltipenable"},".tooltip(\u2018enable\u2019)"),Object(n.b)("p",null,"Gives an element\u2019s tooltip the ability to be shown. Tooltips are enabled by default."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#element').tooltip('enable')\n")),Object(n.b)("h4",{id:"tooltipdisable"},".tooltip(\u2018disable\u2019)"),Object(n.b)("p",null,"Removes the ability for an element\u2019s tooltip to be shown. The tooltip will only be able to be shown if it is re-enabled."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#element').tooltip('disable')\n")),Object(n.b)("h4",{id:"tooltiptoggleenabled"},".tooltip(\u2018toggleEnabled\u2019)"),Object(n.b)("p",null,"Toggles the ability for an element\u2019s tooltip to be shown or hidden."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#element').tooltip('toggleEnabled')\n")),Object(n.b)("h4",{id:"tooltipupdate"},".tooltip(\u2018update\u2019)"),Object(n.b)("p",null,"Updates the position of an element\u2019s tooltip."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#element').tooltip('update')\n")),Object(n.b)("h3",{id:"events"},"Events"),Object(n.b)("table",{class:"table table-bordered table-striped"},Object(n.b)("thead",null,Object(n.b)("tr",null,Object(n.b)("th",{style:{width:150}},"Event Type"),Object(n.b)("th",null,"Description"))),Object(n.b)("tbody",null,Object(n.b)("tr",null,Object(n.b)("td",null,"show.bs.tooltip"),Object(n.b)("td",null,"This event fires immediately when the ",Object(n.b)("code",null,"show")," instance method is called.")),Object(n.b)("tr",null,Object(n.b)("td",null,"shown.bs.tooltip"),Object(n.b)("td",null,"This event is fired when the tooltip has been made visible to the user (will wait for CSS transitions to complete).")),Object(n.b)("tr",null,Object(n.b)("td",null,"hide.bs.tooltip"),Object(n.b)("td",null,"This event is fired immediately when the ",Object(n.b)("code",null,"hide")," ","instance method has been called.")),Object(n.b)("tr",null,Object(n.b)("td",null,"hidden.bs.tooltip"),Object(n.b)("td",null,"This event is fired when the tooltip has finished being hidden from the user (will wait for CSS transitions to complete).")),Object(n.b)("tr",null,Object(n.b)("td",null,"inserted.bs.tooltip"),Object(n.b)("td",null,"This event is fired after the ",Object(n.b)("code",null,"show.bs.tooltip")," event when the tooltip template has been added to the DOM.")))),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{}),"$('#myTooltip').on('hidden.bs.tooltip', function () {\n    // do something...\n})\n")))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"components/Tooltip/tooltips.mdx"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=components-tooltip-tooltips.02a67a6612b8f4eef7ea.js.map